[{"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sat, 02 May 2009 18:06:58 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin", "to": "Martti Malmi <sirius-m@users.sourceforge.net>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #1"}, "authorText": "Thanks for starting that topic on ASC, your understanding of bitcoin is \nspot on.  Some of their responses were rather Neanderthal, although I \nguess they're so used to being anti-fiat-money that anything short of \ngold isn't good enough.  They concede that something is flammable, but \nargue that it'll never burn because there'll never be a spark.  Once \nit's backed with cash, that might change, but I'd probably better \nrefrain from mentioning that in public anymore until we're closer to \nready to start.  I think we'll get flooded with newbies and we need to \nget ready first.\n\nWhat we need most right now is website writing.  My writing is not that \ngreat, I'm a much better coder.  Maybe you could create the website on \nsourceforge, which is currently blank.  If you can write a FAQ, I can \ngive you a compilation of my replies to questions in e-mail and forums \nfor facts and details and ideas.\n\nCodewise, there's not much that's easy right now.  One thing that's \nneeded is an interface for server side scripting languages such as Java, \nPython, PHP, ASP, etc.  Bitcoin would be running on the web server, and \nserver side script could call it to do transactions.  It's Windows, so I \nguess OLE/COM is the interface.\n\nOne easy thing that really helps is to run a node that can accept \nincoming connections (forward port 8333 on your firewall) to make sure \nthat new users who try it out have someone to connect to.  If they run \nit and get no connections, they'll probably just give up.\n\nSatoshi"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 03 May 2009 23:32:26 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #3"}, "authorText": "[...]\n\nThat would be great!  I added you (dmp1ce) as a dev to the sourceforge \nproject and gave you access to edit the web space and everything.\n\n[...]\n\nDefinitely.  This will be an absolutely essential feature once things \nget going, making it so you can lock your wealth up with strong \nencryption and back it up more securely than any physical safe.  So far \nI've been putting it off in favour of other features because it's not \ncrucial yet until bitcoins start to have value.\n\nI plan to work on the escrow feature next, which is needed to make \nactual trades for physical stuff safer and before backing the currency \nwith fiat money can begin.\n\n[...]\n\nThanks!  Right now there are a lot of people on the network who can't \nreceive incoming connections, so every node that can really helps. \nHaving more helps keep down the \"(not accepted)\" issue for now until I \nreduce the chances of that happening in v0.1.6.\n\nI guess one answer for the FAQ should be how to set up your firewall to \nforward port 8333 so you can receive incoming connections.  The question \ncould be something like \"what if I have 0 connections\" and that could be \nthe answer that it might be because the nodes you can connect with is \nlimited if you don't set that up.\n\nHere's a compilation of questions I've answered in forums and e-mail \nthat should help you see what questions are frequently asked and some \nanswers I've used.  It's not intended to use all or most of the material \nhere, just pick and choose.  This is just a dump of everything I've \nanswered.\n\nSome issues that we don't have easy answers for are best not to bring \nup.  Casual users seems content to assume that the system works as \nstated (which it does), and getting into the design details just opens a \ncan of worms that can't be answered without a deep understanding of the \nsystem.  The advanced questions I've received have mostly been unique \nper person and best answered individually.\n\n**** QUESTION AND ANSWER DUMP ****\n\nAny questions used for the FAQ should probably be rephrased.\n\nquestions:\n\n[...]\n\nIt's the total number of blocks in the block chain, meaning the \nnetwork's block chain, which everyone has a copy of.  Every Bitcoin node \ndisplays the same number and it goes up about every 10 minutes whenever \nsomeone generates a block.  When you haven't had it running for a while, \nonce you're connected it spins up rapidly as it downloads what was \ngenerated while you were gone to catch up.  I'm not sure exactly how to \ndescribe it (that would fit on the status bar in 1 word, maybe 2 words \nmax), any ideas?\n\nThe blocks number in the status column next to your transactions is the \nnumber of blocks that have come after that transaction.  Your \ntransaction is essentially \"in\" that many blocks.\n\nSatoshi\n\n[...]\n\nRight.  I'm trying to think of more clear wording for that, maybe \"%d \nnetwork blocks\" or \"%d block chain\".\n\n[...]\n\nWhat rate of not-accepted did you see?  I didn't see anything unusual on \nmy end.  If you had more than, say, 4 in a row, that would be abnormal \nand probably a loss of network communication.  If it's scattered and \nless than 25%, just random bad luck.  It's normal and harmless to \nrandomly get some per cent of not-accepted, and of course randomness can \nsometimes bunch up and look like a pattern.\n\nThe idea of an option to View/Hide unaccepted blocks is a good one, as \nwell as View/Hide all generated blocks so you can more easily see \nincoming transactions.  Seeing the unaccepted blocks is just annoying \nand frustrating.  Everyone faces the same rate of unaccepted, it's just \na part of the process.  It would probably be best to default to hide \nunaccepted blocks, so as not to show giving and taking away something \nthat never was, and not show new generated blocks at all until they have \nat least one confirmation.  It would only mean finding out you have a \ngenerated block 15 minutes later than normal, and then you still have \n119 blocks to go before it matures anyway.  This is on the to-do list \nfor v0.1.6.\n\nSatoshi\n\n[note: I have some improvements in 0.1.6 to reduce this problem somewhat,\nand it'll also improve when the network is larger]\n\n[...]\n\nTransactions sent to a bitcoin address will always say \"from: unknown\". \n  The transaction only tells who it's to.  Sending by bitcoin address \nhas a number of problems, but it's so nice having the fallback option to \nbe able to send to anyone whether they're online or not.  There are a \nnumber of ideas to try to improve things later.  For now, if things work \nout like the real world where the vast majority of transactions are with \nmerchants, they'll pretty much always make sure to set up to receive by \nIP.  The P2P file sharing networks seem fairly successful at getting a \nlarge percentage of their users to set up their firewalls to forward a port.\n\nI badly wanted to find some way to include a comment with indirect\ntransfers, but there just wasn't a way to do it.  Bitcoin uses EC-DSA, which\nwas essential for making the block chain compact enough to be practical with\ntoday's technology because its signatures are an order of magnitude smaller\nthan RSA.  But EC-DSA can't encrypt messages like RSA, it can only be used\nto verify signatures.\n\nThe \"Generated (not accepted)\" normally happens if two nodes find a \nblock at close to the same time, one of them will not be accepted.  It's \nnormal and unavoidable.  I plan in v0.1.6 to hide those, since they're \njust confusing and annoying and there's no reason for users to have to \nsee them.  While the network is still small like it is now, if you can't \nreceive incoming connections you're at more of a disadvantage because \nyou can't receive block announcements as directly.\n\n[...]\n\nRight, the credit field stays 0.00 until it matures, then it'll be\n50.00.  BTW, you can doubleclick on a line for details.\n\n[...]\n\nThere is only one global chain.\n\nThe existing Visa credit card network processes about 15 million \nInternet purchases per day worldwide.  Bitcoin can already scale much \nlarger than that with existing hardware for a fraction of the cost.  It \nnever really hits a scale ceiling.  If you're interested, I can go over \nthe ways it would cope with extreme size.\n\nBy Moore's Law, we can expect hardware speed to be 10 times faster in 5 \nyears and 100 times faster in 10.  Even if Bitcoin grows at crazy \nadoption rates, I think computer speeds will stay ahead of the number of \ntransactions.\n\nI don't anticipate that fees will be needed anytime soon, but if it \nbecomes too burdensome to run a node, it is possible to run a node that \nonly processes transactions that include a transaction fee.  The owner \nof the node would decide the minimum fee they'll accept.  Right now, \nsuch a node would get nothing, because nobody includes a fee, but if \nenough nodes did that, then users would get faster acceptance if they \ninclude a fee, or slower if they don't.  The fee the market would settle \non should be minimal.  If a node requires a higher fee, that node would \nbe passing up all transactions with lower fees.  It could do more volume \nand probably make more money by processing as many paying transactions \nas it can.  The transition is not controlled by some human in charge of \nthe system though, just individuals reacting on their own to market forces.\n\nA key aspect of Bitcoin is that the security of the network grows as the \nsize of the network and the amount of value that needs to be protected \ngrows.  The down side is that it's vulnerable at the beginning when it's \nsmall, although the value that could be stolen should always be smaller \nthan the amount of effort required to steal it.  If someone has other \nmotives to prove a point, they'll just be proving a point I already concede.\n\nMy choice for the number of coins and distribution schedule was an \neducated guess.  It was a difficult choice, because once the network is \ngoing it's locked in and we're stuck with it.  I wanted to pick \nsomething that would make prices similar to existing currencies, but \nwithout knowing the future, that's very hard.  I ended up picking \nsomething in the middle.  If Bitcoin remains a small niche, it'll be \nworth less per unit than existing currencies.  If you imagine it being \nused for some fraction of world commerce, then there's only going to be \n21 million coins for the whole world, so it would be worth much more per \nunit.  Values are 64-bit integers with 8 decimal places, so 1 coin is \nrepresented internally as 100000000.  There's plenty of granularity if \ntypical prices become small.  For example, if 0.001 is worth 1 Euro, \nthen it might be easier to change where the decimal point is displayed, \nso if you had 1 Bitcoin it's now displayed as 1000, and 0.001 is \ndisplayed as 1.\n\nRipple is interesting in that it's the only other system that does \nsomething with trust besides concentrate it into a central server.\n\nSatoshi\n\n[...]\n\nFor the actual risk, multiply the 0.1% by the probability that the buyer \nis an attacker with a huge network of computers.\n\nFor micropayments, you can safely accept the payment immediately.  The \nsize of the payment is too small for the effort to steal it. \nMicropayments are almost always for intellectual property, where there's \nno physical loss to the merchant.  Anyone trying to steal a micropayment \nwould probably not be a paying customer anyway, and if they want to \nsteal intellectual property they can use the file sharing networks.\n\nCurrently, businesses accept a certain chargeoff rate.  I believe the \nrisk with 1 or even 0 confirming blocks will be much less than the rate \nof chargebacks on verified credit card transactions.\n\nThe usual scam against a merchant that doesn't wait for confirming \nblocks would be to send a payment to a merchant, then quickly try to \npropagate a double-spend to the network before the merchant's copy. What \nthe merchant can do is broadcast his transaction and then monitor the \nnetwork for any double-spend copies.  The thief would not be able to \nbroadcast during the monitoring period or else the merchant's node would \nreceive a copy.  The merchant would only have to monitor for a minute or \ntwo until most of the network nodes have his version and it's too late \nfor the thief's version to catch up and reach many nodes.  With just a \nminute or two delay, the chance of getting away without paying could be \nmade much too low to scam.  A thief usually needs a high probability of \ngetting an item for free to make it worthwhile.  Using a lot of CPU \npower to do the brute force attack discussed in the paper in addition to \nthe above scam would not increase the thief's chances very much.\n\nAnything that grants access to something, like something that takes a \nwhile to download, access to a website, web hosting, a subscription or \nservice, can be cancelled a few minutes later if the transaction is \nrejected.\n\n[...]\n\nIt's not communicated.  The formula is hardcoded in the program and \nevery node does the same calculation to know what difficulty is required \nfor the next block.  If someone diverged from the formula, their block \nwould not be accepted by the majority.\n\n[...]\n\nIt's free open source.  It's the MIT license, which just requires some \ndisclaimer text be kept with the source code, other than that you can do \njust about anything you want with it.  The source is included in the \nmain download.\n\nSatoshi\n\n[...]\n\nThe list is:\nbitcoin-list@lists.sourceforge.net\nSubscribe/unsubscribe page:\nhttp://lists.sourceforge.net/mailman/listinfo/bitcoin-list\nArchives:\nhttp://sourceforge.net/mailarchive/forum.php?forum_name=bitcoin-list\n\nI'll always announce new versions there.  Automatic update, or at least \nnotification of new versions, is definitely on the list.\n\n[this inflation discussion was before the transaction fee mechanism and \nfixed plan of 21 million coins was posted, so it may not be as \napplicable anymore]\n\n[...]\n\nYou're still thinking as if the difficulty level will be so easy that \npeople will be able to generate all the bitcoins they want.\n\nImagine you have to run your computer 24/7 for a month to generate 1 \ncent.  After a year, you could generate 12 cents.  That's not going to \nmake it so people can just generate all the bitcoin they want for spending.\n\nThe value of bitcoins would be relative to the electricity consumed to \nproduce them.  All modern CPUs save power when they're idle.  If you run \na computational task 24/7, not letting it idle, it uses significantly \nmore power, and you'll notice it generates more heat.  The extra wattage \nconsumed goes straight to your power bill, and the value of the bitcoins \nyou produce would be something less than that.\n\n[...]\n\nNo, they can't make money that way.  It would cost them more in \nelectricity than they'd be selling the bitcoins for.\n\nHistorically, people have taken up scarce commodities as money, if \nnecessary taking up whatever is at hand, such as shells or stones.  Each \nhas a kernel of usefulness that helped bootstrap the process, but the \nmonetary value ends up being much more than the functional value alone. \n  Most of the value comes from the value that others place in it.  Gold, \nfor instance, is pretty, non-corrosive and easily malleable, but most of \nits value is clearly not from that.  Brass is shiny and similar in \ncolour.  The vast majority of gold sits unused in vaults, owned by \ngovernments that could care less about its prettiness.\n\nUntil now, no scarce commodity that can be traded over a communications \nchannel without a trusted third party has been available.  If there is a \ndesire to take up a form of money that can be traded over the Internet \nwithout a TTP, then now that is possible.\n\nSatoshi\n\n[...]\n\nActually, that is handled.  There's a moving average that compensates \nfor the total effort being expended so that the total production is a \nconstant.  As computers get more powerful, the difficulty increases to \ncompensate.\n\n[...]\n\nThere's gold for one.  The supply of gold increases by about 2%-3% per \nyear.  Any fiat currency typically averages more inflation than that.\n\n[...]\n\nThe difficulty is controlled by a moving average that compensates for \nthe total effort being expended to keep the total production constant. \nAs computers get more powerful, the difficulty increases to compensate.\n\n[...]\n\nIdentities are not used, and there's no reliance on recourse.  It's all \nprevention.\n\n[...]\n\nThere is no reliance on identifying anyone.  As you've said, it's\nfutile and can be trivially defeated with sock puppets.\n\nThe credential that establishes someone as real is the ability to\nsupply CPU power.\n\n[...]\n\nThis is a version 2 problem that I believe can be solved fairly\nsatisfactorily for most applications.\n\nThe race is to spread your transaction on the network first.  Think 6\ndegrees of freedom -- it spreads exponentially.  It would only take\nsomething like 2 minutes for a transaction to spread widely enough\nthat a competitor starting late would have little chance of grabbing\nvery many nodes before the first one is overtaking the whole network.\nDuring those 2 minutes, the merchant's nodes can be watching for a\ndouble-spent transaction.  The double-spender would not be able to\nblast his alternate transaction out to the world without the merchant\ngetting it, so he has to wait before starting.\n\nIf the real transaction reaches 90% and the double-spent tx reaches\n10%, the double-spender only gets a 10% chance of not paying, and 90%\nchance his money gets spent.  For almost any type of goods, that's\nnot going to be worth it for the scammer.\n\nInformation based goods like access to website or downloads are\nnon-fencible.  Nobody is going to be able to make a living off\nstealing access to websites or downloads.  They can go to the file\nsharing networks to steal that.  Most instant-access products aren't\ngoing to have a huge incentive to steal.\n\nIf a merchant actually has a problem with theft, they can make the\ncustomer wait 2 minutes, or wait for something in e-mail, which many\nalready do.  If they really want to optimize, and it's a large\ndownload, they could cancel the download in the middle if the\ntransaction comes back double-spent.  If it's website access,\ntypically it wouldn't be a big deal to let the customer have access\nfor 5 minutes and then cut off access if it's rejected.  Many such\nsites have a free trial anyway.\n\nSatoshi\n\n[in response to a question about scale]\n\n100,000 block generating nodes is a good ballpark large-scale size\nto think about.  Propagating a transaction across the whole network\ntwice would consume a total of US$ 0.02 of bandwidth at today's\nprices.  In practice, many would be burning off excess allocated\nbandwidth or unlimited plans with one of the cheaper backbones.\nThere could be millions of SPV clients.  They only matter in how\nmany transactions they generate.  If they pay 1 or 2 cents\ntransaction fees, they pay for themselves.  I've coded it so you\ncan pay any optional amount of transaction fees you want.  When the\nincentive subsidy eventually tapers off, it may be necessary to put\na market-determined transaction fee on your transactions to make\nsure nodes process them promptly.\n\nTo think about what a really huge transaction load would look like,\nI look at the existing credit card network.  I found some more\nestimates about how many transactions are online purchases.  It's\nabout 15 million tx per day for the entire e-commerce load of the\nInternet worldwide.  At 1KB per transaction, that would be 15GB of\nbandwidth for each block generating node per day, or about two DVD\nmovies worth.  Seems do-able even with today's technology.\n\nImportant to remember, even if Bitcoin caught on at dot-com rates\nof growth, it would still take years to become any substantial\nfraction of all transactions.  I believe hardware has already\nrecently become strong enough to handle large scale, but if there's\nany doubt about that, bandwidth speeds, prices, disk space and\ncomputing power will be much greater by the time it's needed.\n\nSatoshi\n\n[...]\n\nIt's not like a race where if one car is twice as fast, it'll always\nwin.  It's an SHA-256 that takes less than a microsecond, and each guess\nhas an independent chance of success.  Each computer's chance of finding\na hash collision is linearly proportional to it's CPU power.  A computer\nthat's half as fast would get half as many coins.\n\n\n[question about what to backup]\n\nThe files are in \"%appdata%\\Bitcoin\", that's the directory to\nbackup.\n\n%appdata% is per-user access privilege.  Most new programs like\nFirefox store their settings files there, despite the headwind of\nMicrosoft changing the directory name with every Windows release\nand being full of spaces and so long it runs off the screen.\n\n[question about what to backup]\n\nThe directory is \"%appdata%\\Bitcoin\"\nIt has spaces in it so you need the quotes\ncd \"%appdata%\\bitcoin\"\n\nOn XP it would typically be:\nC:\\Documents and Settings\\[username]\\Application Data\\Bitcoin\n\nBackup that whole directory.  All data files are in that\ndirectory.  There are no temporary files.\n\n[question about what to backup]\n\nThe crucial file to backup is wallet.dat.  If bitcoin is running\nthen you have to backup the whole %appdata%\\bitcoin directory\nincluding the database subdirectory, but even if it's not running\nit certainly feels safer to always backup the whole directory.\n\nThe database unfortunately names its files \"log.0000000001\".  To\nthe rest of the world, \"log\" means delete-at-will, but to database\npeople it means delete-and-lose-everything-in-your-other-files.  I\ntried to put them out of harm's way by putting them in the\ndatabase subdirectory.  Later I'll write code to flush the logs\nafter every wallet change so wallet.dat will be standalone safe\nalmost all the time.\n\n[...]\n\nHal sort of alluded to the possibility that it could be seen as a\nlong-odds investment.  I would be surprised if 10 years from now\nwe're not using electronic currency in some way, now that we know\na way to do it that won't inevitably get dumbed down when the\ntrusted third party gets cold feet.\n\nOnce it gets bootstrapped, there are so many applications if you\ncould effortlessly pay a few cents to a website as easily as dropping\ncoins in a vending machine.\n\n[this next bit turned out to be very controversial.  there is extreme\nprejudice against spam solutions, especially proof-of-work.]\n\nIt can already be used for pay-to-send e-mail.  The send dialog is\nresizeable and you can enter as long of a message as you like.\nIt's sent directly when it connects.  The recipient doubleclicks\non the transaction to see the full message.  If someone famous is\ngetting more e-mail than they can read, but would still like to\nhave a way for fans to contact them, they could set up Bitcoin and\ngive out the IP address on their website.  \"Send X bitcoins to my\npriority hotline at this IP and I'll read the message personally.\"\n\nSubscription sites that need some extra proof-of-work for their\nfree trial so it doesn't cannibalize subscriptions could charge\nbitcoins for the trial.\n\n\n[again, I don't know why I'm including this, as it's best to stay\naway from claims about spam.  people automatically react violently\nagainst any suggestion of a spam solution.]\n\n[...]\n\nThen you could earn a nice profit by setting up pay-per-send\ne-mail addresses and collecting all the spam money.  You could\nsell it back to spammers who don't have big enough botnets to\ngenerate their own, helping bootstrap the currency's value.  As\nmore people catch on, they'll set up more and more phony addresses\nto harvest it.  By the time the book \"How I got rich exploiting\nspammers and you can too\" is coming out, there'll be too many fake\naddresses and the spammers will have to give up.\n\n[...]\n\nOne more factor that would mitigate spam if POW tokens have value:\nthere would be a profit motive for people to set up massive\nquantities of fake e-mail accounts to harvest POW tokens from\nspam.  They'd essentially be reverse-spamming the spammers with\nautomated mailboxes that collect their POW and don't read the\nmessage.  The ratio of fake mailboxes to real people could become\ntoo high for spam to be cost effective.\n\nThe process has the potential to establish the POW token's value\nin the first place, since spammers that don't have a botnet could\nbuy tokens from harvesters.  While the buying back would\ntemporarily let more spam through, it would only hasten the\nself-defeating cycle leading to too many harvesters exploiting the\nspammers.\n\nInterestingly, one of the e-gold systems already has a form of\nspam called \"dusting\".  Spammers send a tiny amount of gold dust\nin order to put a spam message in the transaction's comment field.\n  If the system let users configure the minimum payment they're\nwilling to receive, or at least the minimum that can have a\nmessage with it, users could set how much they're willing to get\npaid to receive spam.\n\n[...]\n\nIronic if we end up having to choose between economic liberty and\nconservation.\n\nUnfortunately, proof of work is the only solution I've found to\nmake p2p e-cash work without a trusted third party.  Even if I\nwasn't using it secondarily as a way to allocate the initial\ndistribution of currency, PoW is fundamental to coordinating the\nnetwork and preventing double-spending.\n\nIf it did grow to consume significant energy, I think it would\nstill be less wasteful than the labour and resource intensive\nconventional banking activity it would replace.  The cost would be\nan order of magnitude less than the billions in banking fees that\npay for all those brick and mortar buildings, skyscrapers and junk\nmail credit card offers.\n\nSatoshi\n\n[...]\n\nIndeed, Bitcoin is a distributed secure timestamp server for\ntransactions.  A few lines of code could create a transaction with\nan extra hash in it of anything that needs to be timestamped.\nI should add a command to timestamp a file that way.\n\n From a thread on p2presearch which starts with my rant about trust \nbeing the root weakness of all conventional financial systems.\nhttp://listcultures.org/pipermail/p2presearch_listcultures.org/2009-February/thread.html\n\nI've developed a new open source P2P e-cash system called Bitcoin.  It's\ncompletely decentralized, with no central server or trusted parties,\nbecause everything is based on crypto proof instead of trust.  Give it a\ntry, or take a look at the screenshots and design paper:\n\nDownload Bitcoin v0.1 at http://www.bitcoin.org\n\nThe root problem with conventional currency is all the trust that's\nrequired to make it work.  The central bank must be trusted not to\ndebase the currency, but the history of fiat currencies is full of\nbreaches of that trust.  Banks must be trusted to hold our money and\ntransfer it electronically, but they lend it out in waves of credit\nbubbles with barely a fraction in reserve.  We have to trust them with\nour privacy, trust them not to let identity thieves drain our accounts.\nTheir massive overhead costs make micropayments impossible.\n\nA generation ago, multi-user time-sharing computer systems had a similar\nproblem.  Before strong encryption, users had to rely on password\nprotection to secure their files, placing trust in the system\nadministrator to keep their information private.  Privacy could always\nbe overridden by the admin based on his judgment call weighing the\nprinciple of privacy against other concerns, or at the behest of his\nsuperiors.  Then strong encryption became available to the masses, and\ntrust was no longer required.  Data could be secured in a way that was\nphysically impossible for others to access, no matter for what reason,\nno matter how good the excuse, no matter what.\n\nIt's time we had the same thing for money.  With e-currency based on\ncryptographic proof, without the need to trust a third party middleman,\nmoney can be secure and transactions effortless.\n\nOne of the fundamental building blocks for such a system is digital\nsignatures.  A digital coin contains the public key of its owner.  To\ntransfer it, the owner signs the coin together with the public key of\nthe next owner.  Anyone can check the signatures to verify the chain of\nownership.  It works well to secure ownership, but leaves one big\nproblem unsolved: double-spending.  Any owner could try to re-spend an\nalready spent coin by signing it again to another owner.  The usual\nsolution is for a trusted company with a central database to check for\ndouble-spending, but that just gets back to the trust model.  In its\ncentral position, the company can override the users, and the fees\nneeded to support the company make micropayments impractical.\n\nBitcoin's solution is to use a peer-to-peer network to check for\ndouble-spending.  In a nutshell, the network works like a distributed\ntimestamp server, stamping the first transaction to spend a coin.  It\ntakes advantage of the nature of information being easy to spread but\nhard to stifle.  For details on how it works, see the design paper at\nhttp://www.bitcoin.org/bitcoin.pdf\n\nThe result is a distributed system with no single point of failure.\nUsers hold the crypto keys to their own money and transact directly with\neach other, with the help of the P2P network to check for double-spending.\n\nSatoshi Nakamoto\nhttp://www.bitcoin.org\n\n[...]\n\nIt's similar in that it uses digital signatures for coins, but different\nin the approach to privacy and preventing double-spending.  The\nrecipient of a Bitcoin payment is able to check whether it is the first\nspend or not, and second-spends are not accepted.  There isn't an\noff-line mode where double-spenders are caught and shamed after the\nfact, because that would require participants to have identities.\n\nTo protect privacy, key pairs are used only once, with a new one for\nevery transaction.  The owner of a coin is just whoever has its private key.\n\nOf course, the biggest difference is the lack of a central server.  That\nwas the Achilles heel of Chaumian systems; when the central company shut\ndown, so did the currency.\n\n[...]\n\nThere is a limited supply of money.  Circulation will be 21,000,000\ncoins.  Transactions only transfer ownership.\n\nThank you for your questions,\n\nSatoshi\n\n[...]\n\nIndeed, it is much like Pekunio in the concept of spraying redundant\ncopies of every transaction to a number of peers on the network, but the\nimplementation is not a reputation network like Wizard Rabbit Treasurer.\n   In fact, Bitcoin does not use reputation at all.  It sees the network\nas just a big crowd and doesn't much care who it talks to or who tells\nit something, as long as at least one of them relays the information\nbeing broadcast around the network.  It doesn't care because there's no\nway to lie to it.  Either you tell it crypto proof of something, or it\nignores you.\n\n[...]\n\nAs trust systems go, Ripple is unique in spreading trust around rather\nthan concentrating it.\n\n[I've been asked at least 4 other times \"have you heard of Ripple?\"]\n\nMichel Bauwens wrote:\n[...]\n\nIt's fully operational and the network is growing.  If you try the\nsoftware, e-mail me your Bitcoin address and I'll send you a few coins.\n\nWe just need to spread the word and keep getting more people interested.\n\nHere's a link to the original introduction of the paper on the \nCryptography mailing list.  (Inflation issues were superseded by changes \nI made later to support transaction fees and the limited circulation \nplan.  This link is a moving target, this archive page is just a certain \nnumber of days back and the discussion will keep scrolling off to the \nnext page.)\nhttp://www.mail-archive.com/cryptography@metzdowd.com/mail3.html\n\nA little follow up when the software was released.\nhttp://www.mail-archive.com/cryptography@metzdowd.com/mail2.html\n\nMy description of how Bitcoin solves the Byzantine Generals' problem:\nhttp://www.bitcoin.org/byzantine.html"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 04 May 2009 16:51:00 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #5"}, "authorText": "Oh crap, I got your sourceforge usernames mixed up, sorry about that.  I \nclicked on the wrong e-mail when I was looking for your username.  You \nnow have access.\n\nYour FAQ looks good so far!\n\nYou can create whatever you want on bitcoin.sourceforge.net.  Something \nto get new users up to speed on what Bitcoin is and how to use it and \nwhy, and clean and professional looking would help make it look well \nestablished.  The site at bitcoin.org was designed in a more \nprofessorial style when I was presenting the design paper on the \nCryptography list, but we're moving on from that phase.\n\nYou should probably change the part about \"distribute them under several \nkeys\".  When the paper says that it means for the software to do it, and \nit does.  For privacy reasons, the software already uses a different key \nfor every transaction, so every piece of money in your wallet is already \non a different key.  The exception is when using a bitcoin address, \neverything sent to the same bitcoin address is on the same key, which is \na privacy risk if you're trying to be anonymous.  The EC-DSA key size is \nvery strong (sized for the future), we don't practically have to worry \nabout a key getting broken, but if we did there's the advantage that \nsomeone expending the massive computing resources would only break one \nsingle transaction's worth of money, not someone's whole account.  The \ndetails about how to backup your wallet files is in the Q&A dump and \nalso it's explained in readme.txt and definitely belongs in the FAQ.\n\nOh I see, you're trying to address byronm's concern on freedomainradio. \n  I see what you mean about the password feature being useful to address \nthat argument.  Banks let anyone who has your name and account number \ndrain your account, and you're not going to get it back from Nigeria. \nIf someone installs a keylogger on your computer, they could just as \neasily get your bank password and transfer money out of your account. \nOnce we password encrypt the wallet, we'll be able to make a clearer \ncase that we're much more secure than banks.  We use strong encryption, \nwhile banks still let anyone who has your account info draw money from \nyour account."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 05 May 2009 18:39:44 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #8"}, "authorText": "[...]\n\nThey have Wordpress built in, you might not need to set up any database \nstuff manually.  I enabled the Wordpress feature and added you as an \nadmin, account sirius-m, e-mail sirius-m@users.sourceforge.net.  I'm not \nsure how it works out the password for access, maybe it's just based on \nbeing logged in to sourceforge.\n\nhttps://apps.sourceforge.net/wordpress/bitcoin/wp-admin/\n\nThey also have support for MediaWiki if you want it.\n\nIn case you still need it, here's the accounts and passwords for mysql.\n\n# Access this project's databases over the Internet \nhttps://apps.sourceforge.net/admin/Bitcoin\n# Documentation: Guide to MySQL Database Services \nhttp://p.sf.net/sourceforge/mysql\n# Hostname: mysql-b   (exactly as shown, with no domain suffix)\n# Database name prefix: b244765_ -- i.e. \"CREATE DATABASE b244765_myapp\" \nas your ADMIN user.\n# RO user: b244765ro (SELECT)\n# RW user: b244765rw (SELECT, INSERT, DELETE, UPDATE)\n# ADMIN user: b244765admin (has RW account privileges, and CREATE, DROP, \nALTER, INDEX, LOCK TABLES)\n# web-access URL: https://mysql-b.sourceforge.net/\npasswords:\nb244765ro       EaG3nHLL\nb244765rw       sNKgyt4W\nb244765admin    Mz589ZKf\n\n\n[...]\n\nThat's true.\n\nWe shouldn't try to use security against identity theft as a selling \npoint, since it leads into these counter arguments.  The current banking \nmodel is already tested and the actual loss percentage is known.  Even \nif ours is probably better, it's an unknown, so people can imagine \nanything.  The uncertainty about what the average loss percentage will \nbe is greater than the likely loss percentage itself."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 07 May 2009 03:35:50 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #11"}, "authorText": "It's already an improvement, and like you say, there must be better \nthemes to choose from.\n\nIt would be good to make the download link go directly to the download area:\nhttps://sourceforge.net/project/showfiles.php?group_id=244765\n\nI haven't found any way to gain admin control over the mediawiki \nfeature.  It thinks I'm a different S_nakamoto from the one that has \nadmin access:\n     User list\n     * S nakamoto  <- it thinks I'm this one\n     * S nakamoto \u200e(admin, editor)\n     * Sirius-m\n\nI tried deleting and re-enabling the feature, no help.  Oh well."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 24 May 2009 23:03:38 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #15"}, "authorText": "You're right, that was it.  I went in and granted us access using the \nalternate account.\n\nI like your idea of at least moving the FAQ into the wiki.  I've seen \nother projects that use the wiki for the FAQ or even the whole site.  If \nyou can figure out how to make it so regular users can edit things, then \nanyone who wants to can help."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 11 Jun 2009 22:24:25 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #19"}, "authorText": "The site layout is looking nicer.  More impressive looking.\n\nThere are a lot of things you can say on the sourceforge site that I \ncan't say on my own site.  Even so, I'm uncomfortable with explicitly \nsaying \"consider it an investment\".  That's a dangerous thing to say and \nyou should delete that bullet point.  It's OK if they come to that \nconclusion on their own, but we can't pitch it as that.\n\nA few details: the FAQ says \"see section 2.3\", but the sections aren't \nnumbered.  Also, could you delete the last sentence on the FAQ \"They are \nplanned to be hidden in v0.1.6, since they're just confusing and \nannoying and there's no reason for users to have to see them.\" -- that's \nnot really something I meant to say publicly.\n\nThe links to sites to help set up 8333 port forwarding is great. \nfavicon is a nice touch.\n\nSomeone came up with the word \"cryptocurrency\"... maybe it's a word we \nshould use when describing Bitcoin, do you like it?\n\nSourceforge is so slow right now I can't even get the login page to \nload.  Maybe due to the site reorg they just did.  I'll keep trying and \ntry to get you that logo stats thing."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 14 Jun 2009 21:30:58 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #21"}, "authorText": "[...]\n\nThanks, I've been really busy lately.\n\nI registered username \"satoshi\".  Since there's no SSL login, I want to \nmainly use that account with sub-admin powers and use the admin account \nas little as possible.  I created a \"Moderators\" group to give my \nsatoshi account as much editing control as possible without the ability \nto overthrow everything.\n\nThere's something weird with the download bar on the right covering \nthings up, like on the new account registration it covers up the entry \nfields unless you make the browser really wide, and the homepage it \ncovers up the screenshots.  (with Firefox)"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 21 Jul 2009 04:14:43 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #24"}, "authorText": "I know this sounds really retarded, but I still haven't been able to get \nthe sourceforge login page to load, so I haven't been able to read it \neither.  https://sourceforge.net/account/login.php\n\nHal isn't currently actively involved.  He helped me a lot defending the \ndesign on the Cryptography list, and with initial testing when it was \nfirst released.  He carried this torch years ago with his Reusable Proof \nOf Work (RPOW).\n\nI'm not going to be much help right now either, pretty busy with work, \nand need a break from it after 18 months development.\n\nIt would help if there was something for people to use it for.  We need \nan application to bootstrap it.  Any ideas?\n\nThere are donors I can tap if we come up with something that needs \nfunding, but they want to be anonymous, which makes it hard to actually \ndo anything with it."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 24 Aug 2009 23:00:35 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #28"}, "authorText": "That's a good point that since you know how many coins exist and how \nfast new ones are created, you could set a support price based on the \namount of legacy currency you have and be sure you'll have enough to \nmeet all demands.  I had imagined an auction, but it would be far \nsimpler and more confidence inspiring to back it at a specific exchange \nrate.\n\nOffering currency to back bitcoins would attract freebie seekers, with \nthe benefit of attracting a lot of publicity.  At first it would mostly \nbe seen as a way to get free money for your computer's idle time.  Maybe \npitched like help support the future of e-commerce and get a little \nmoney for your computer's spare cycles.  As people cash in and actually \nget paid, word would spread exponentially.\n\nIt might help to keep the minimum transaction size above an amount which \na typical user would be able to accumulate with one computer, so that \nusers have to trade with each other for someone to collect enough to \ncash in.  Aggregators would set up shop to buy bitcoins in smaller \nincrements, which would add confidence in users ability to sell bitcoins \nif there are more available buyers than just you.\n\nPeople would obviously be sceptical at first that the backing will hold \nup against an onslaught of people trying to get the free money, but as \nthe competition raises the proof-of-work difficulty, it should become \nclear that bitcoins stay scarce.  People will see that they can't just \nget all the bitcoins they want.  It would establish a minimum value \nunder bitcoins enabling them to be used for other purposes if, \nhopefully, other purposes are waiting for something to use.\n\n[...]\n\nThat would be more powerful if there was also some narrow product market \nto use it for.  Some virtual currencies like Tencent's Q coin have made \nheadway with virtual goods.  It would be sweet if there was some way to \nhorn in on a market like that as the official virtual currency gets \nclamped down on with limitations.  Not saying it can't work without \nsomething, but a ready specific transaction need that it fills would \nincrease the certainty of success.\n\n[...]\n\nBasically like an eBay site with user reviews to try to establish which \nsellers can be trusted.  The escrow feature will help but not solve \neverything.  It would be far more work to set up such a site than just \nto set up a single exchange site of your own, and there won't be enough \nusers to make it go until later.  I'm thinking it wouldn't make sense to \nmake an eBay type site until later.\n\n[...]\n\nEven if you had automation, you'd probably want to review orders \nmanually before processing them anyway.  It wouldn't be hard to process \norders by hand, especially at first.  You could always set a minimum \norder size to keep orders more infrequent.\n\n[...]\n\nThat's great, I could probably get a donor to send currency to you which \nyou convert to euros and pay out through methods that are convenient for \nusers.  I don't want to do an exchange business myself, but it can be \ndone independently of me.  Like you say, there is more software \ndevelopment to be done first, and also I'd like to keep trying for a \nwhile to think of a bootstrap application to use bitcoins for.  I've had \nsome ideas that could only be done before an exchange exists.\n\nBTW, I tried to buy bitcoin.com before I started but there was no \nchance, it's owned by a professional domain speculator.  It's normal for \nopen source projects to have .org so it's not so bad."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 24 Aug 2009 23:04:25 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #29"}, "authorText": "Glad that worked, it's a pain that the dependencies are so big and hard \nto build.  Some of them give little attention to the Windows build. \nNext time I update to the latest versions, maybe I'll lay everything out \nin one directory tree and bundle the whole thing up into a giant archive.\n\nI'm not sure they had wxPack before.  I'm glad they got that so everyone \ndoesn't have to build wxWidgets themselves.  OpenSSL is the harder one \nto build.\n\nI reduced the EXE size by running strip.exe on it to take out the debug \nsymbols.  That's with mingw.  That's the better compiler, I only used VC \n  for debugging."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sat, 29 Aug 2009 18:31:05 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #31"}, "authorText": "[...]\n\nNow that I think about it, you've put your finger on the most important \nmissing feature right now that would make an order of magnitude \ndifference in the number of nodes.  Without auto-run, we'll almost never \nretain nodes after an initial tryout interest.  Auto-running as a \nminimized tray icon by default was the key to success for the early file \nsharing networks.  It wouldn't have been appropriate for v0.1.0 when \nstability wasn't a given yet, but now it's good and stable.  This is a \nmust-have feature for the next release so any users that come back to \ntry the new version we hopefully retain this time.\n\nI think the most user friendly way of doing auto-run is putting an icon \nin the Startup folder.  I see OpenOffice.org and a number of other \nthings on my computer do it that way.  The other way, creating a runas \nregistry entry, is not easily visible or editable by users, I've never \nliked that much.  I guess what we want is an auto-run option that's on \nby default, if the option is changed then it creates or deletes the \nstartup icon.\n\nWhile it's tempting to do a Linux port, once we do it we have that extra \nwork with every release from then on.  I'd rather put it off a while \nlonger.  Auto-run might give us 300% more nodes while Linux might give \nus 3% more.  Linux would help server farms, but actually we'd like to \nfavour individual users.  Someone reported that it works fine in WinE."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 30 Sep 2009 19:12:29 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #33"}, "authorText": "That's great, that's a good step forward.\n\nYes, I worked out the sourceforge login problem, it was some tricky \nthing on the login page that exposed a quirky bug in a browser add-in."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 16 Oct 2009 19:41:40 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Setup, Autorun, v0.1.6", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #35"}, "authorText": "Thanks for that.  I'm still merging in some changes I had that need to \ngo in before any next release.  Some things based on questions and \nfeedback I've received that'll reduce confusion.  I'll probably enable \nmulti-proc generating support, and hopefully make it safe to just backup \nwallet.dat to backup your money.  It's good to be coding again!\n\nI'm going to hide the transaction fee setting, which is completely not \nneeded and only serves to confuse people.  It was only there for testing \nand demonstration of a technical detail that can only be needed in the \nfar away future, if ever, but was necessary to implement at the \nbeginning to make it possible later.\n\nWhat was the problem with the shortcut in the startup folder?  If you \ncould send me the code, I'd like to take another look and see if I can \nsee what the problem was.  The first strcat in the registry code should \nbe strcpy, otherwise it would fail intermittently.  If the same code was \nin the shortcut one, maybe that was the problem.\n\nIt's encouraging to see more people taking an interest such as that \nNewLibertyStandard site.  I like his approach to estimating the value \nbased on electricity.  It's educational to see what explanations people \nadopt.  They may help discover a simplified way of understanding it that \nmakes it more accessible to the masses.  Many complex concepts in the \nworld have a simplistic explanation that satisfies 80% of people, and a \ncomplete explanation that satisfies the other 20% who see the flaws in \nthe simplistic explanation."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 18 Oct 2009 18:59:42 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Setup, Autorun, v0.1.6", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #36"}, "authorText": "I got it, I see you checked in the startup folder code before changing \nit to registry.  I don't see any visible problems in the code.  I guess \nit depends what exactly the problem was with it not always working by \ndefault.  Was there a Vista/UAC security problem?"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 19 Oct 2009 00:11:50 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Setup, Autorun, v0.1.6", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #38"}, "authorText": "It's possible Bitcoin ran and bailed out because something was wrong. \ndebug.log should tell something if that was the case.  What OS are you \nusing?  I wonder if we need Admin privilege and don't realize it.  Stuff \nthat requires Admin can't start on startup on Vista.\n\nProgram shortcuts have multiple tabs of settings with lots of little \ndetails.  I'll try the startup folder code and see if I can reproduce \nthe problem.  Every other systray icon on my computer is in the startup \nfolder, and it makes it easy for users to manage all their autoruns in \none place.  The things in the registry key tend to be devious hidden \nbloatware.\n\nI implemented the code to flush wallet.dat whenever it's closed so we'll \nbe able to tell users they only need to backup wallet.dat.  You can \nrestore just wallet.dat and it'll re-download the rest.  I'll have to do \nanother stress test before release."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 21 Oct 2009 18:58:49 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Setup, Autorun, v0.1.6", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #40"}, "authorText": "Yeah, I put back your startup folder shortcut code and it started fine \nfor me too on XP and Vista.  For good measure, I changed it to make the \nshortcut settings look identical to one I manually created.  I set the \nworking directory to where the EXE is since that's where debug.log is \ncreated, otherwise windows puts it in some weird directory.  I didn't \nchange the setup script yet.\n\nI checked everything in to SVN (thanks for setting that up)\n- multi-proc generate\n- flush wallet.dat after every change so the DB doesn't leave that stuff \nin the transaction logs\n- view menu checkbox to hide all generated coins so you can see just \nyour payment transactions\n- disabled transaction fee option\n- made the minimize to tray options similar to Firefox's MinimizeToTray\n- bunch of other misc changes since the 0.1.5 release\n\nI made it not show non-accepted generated coins.  It won't show \ngenerated coins until they have at least one confirmation (one block \nlinked after it), so usually they'll just never be seen.  Occasionally a \ngenerated coin that was displayed might disappear because it became not \naccepted later.  I don't think anyone would notice the occasional \nnon-accepteds if we didn't point them out in the UI.  People have told \nme they find it annoying to have to look at them, as they're permanently \ndisplayed in the transaction record.\n\nI still have more testing to do.  I guess we gotta test Windows 7 now."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sat, 24 Oct 2009 00:55:06 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: [bitcoin-list] Does Bitcoin Crash in Windows?", "to": "Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #41"}, "authorText": "[...]\n\nI haven't had any reports of crashes in v0.1.5.  It's been rock solid \nfor me on Windows.  I think it must be Wine related.  If you get another \ncrash in Wine and it prints anything on the terminal, e-mail me and I \nmay be able to figure out what happened, maybe something I can work \naround.  Martti and I have been working on a new version to release soon \nand it would be nice to get any Wine fixes in there.\n\n[...]\n\nThose don't look like anything to worry about.  Probably functions \nunimplemented by Wine that are harmlessly stubbed out.\n\n[...]\n\nYou can delete debug.log occasionally if you don't want to take the disk \nspace.  It's just status messages that help with debugging.\n\nbitcoin.sourceforge.net looks fine now.  Maybe sourceforge was doing \nsome maintenance.\n\nSatoshi"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 26 Oct 2009 17:50:10 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Fw: bitcoin.sourceforge.net", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #42"}, "authorText": "Any idea what's going on with it?  Every time I look, it's fine.\n\n[...]\n\nDoesn't work right now."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 27 Oct 2009 04:45:47 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Fw: bitcoin.sourceforge.net", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #44"}, "authorText": "Sourceforge is just so darn slow.  I don't know what else to do though. \n  It's such a standard, more often than not any given project has a \nprojectname.sourceforge.net site.  When I see whatever.sourceforge.net \nin a google search, I assume that's the official site.\n\nIs there a way to make Bitweaver allow users to edit (and maybe delete) \ntheir own messages in the forum?\n\nGetting antsy to port to Linux?  It's not a decision to be taken lightly \nbecause once it's done, it doubles my testing and building workload. \nAlthough I am worried about Liberty's Wine crashes.\n\nI've tried to be as portable as possible and use standard C stuff \ninstead of Windows calls.  The threading is _beginthread which is part \nof the standard C library.  wxWidgets has wxCriticalSection stuff we can \nuse.  The sockets code is send/recv stuff which I think is the same as \nunix because Microsoft ported sockets from BSD.  We need direct control \nover sockets, it wouldn't be a good idea to get behind an abstraction \nlayer.  wxWidgets is a good place to look for cross-platform support \nfunctions.  I want to avoid #ifdefing up the code if we can.  Anything \nthat's used more than once probably becomes a function in util.cpp that \nhas the #ifdef in it.\n\nBTW, I have a lot of uncommitted changes right now because it includes \nsome crucial protocol transitions that can't be unleashed on the network \nuntil I've tested the heck out of it.  It shouldn't be too much longer.\n\nCan you make the setup uninstall the Startup folder icon?  I figure it \nshould install and uninstall an icon in a regular program group, and \njust uninstall the Startup folder one.  I guess it doesn't matter that \nmuch whether it installs and uninstalls the Startup folder icon or just \nuninstalls it."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 29 Oct 2009 02:05:30 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Fw: bitcoin.sourceforge.net", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #46"}, "authorText": "I'll convert the CriticalSection code to wxCriticalSection and upload it \nto SVN (it's a little tricky).  I don't know what to do for \nTryEnterCriticalSection though.  I think I'm almost ready to check \neverything in.\n\nYou're probably right, it's about time to do a linux build.  I've been \nworking on getting my linux machine set up and building the dependencies."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 29 Oct 2009 06:38:30 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux build", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #48"}, "authorText": "The easy solution I took was to look at the wxWidgets source code and \nsee how they did it.  They just mapped it to wxMutex on non-MSW, which \ndoes have TryEnter, so that mapped in perfectly.\n\nI checked in all my backlog of changes to SVN, including the overhaul of \nCCriticalSection in util.h and OpenSSL's mutex callback in util.cpp to \ndo everything with wxWidgets when not on Windows.\n\nIf we get it working on Linux, I'll run my test suite against it here \noff-network first, then we can give an unreleased build to \nLibertyStandard to test for a while before going public."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 30 Oct 2009 01:05:45 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux build", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #49"}, "authorText": "I fixed some non-portable stuff I came across:\nQueryPerformanceCounter\n%I64d in printf format strings\nSleep\nCheckDiskSpace\n\nIf there's any other unportable stuff you know of I should fix, let me know.\n\nI think I'll move debug.log and db.log into the same directory as the \ndata files (%appdata%\\Bitcoin), rather than whatever the current \ndirectory happens to be."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sat, 31 Oct 2009 20:09:58 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux build", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #51"}, "authorText": "heapchk() is just a MSVCRT debugging thing that's not being used.  It \ncan be a no-op on Linux.  OpenSSL automatically uses /dev/urandom to \nseed on Linux, so RandAddSeedPerfmon can also be a no-op.\n\nDon't let it connect to the network before we've tested it thoroughly \noff-net.  If you have two computers, unplug the internet and use \n\"bitcoin -connect=<ip>\" to connect to each other, one windows and one \nlinux.  -connect will allow you to connect to non-routable addresses \nlike 192.168.x.x.  We don't want to reflect badly on the reliability of \nthe network if it throws off some malformed crud we hadn't thought to \ncheck for yet, or discovers something else anti-social to do on the network.\n\nI have time that I can do some testing when you've got something \nbuildable to test.  I can include it in the stress test I'm currently \nrunning on the changes so far."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 03 Nov 2009 15:53:25 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux build, proxy", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #53"}, "authorText": "Great, I've been looking forward to working on the Linux build.\n\nIf you connect to Freenode's hidden service, then they tell you they've \nalso banned TOR from that due to abuse and it kicks you off.  There's a \nseveral step procedure you can do to run a password utility on unix and \ne-mail request an account that you could login with, but that's getting \npretty complicated.  I wonder if we could get away with applying for one \naccount and then everyone use the same account?  I suppose the IRC \nserver probably limits accounts to one login, or some admin might not \nlike to see a dozen logins on the same account.\n\nBesides the IRC part, how did your test of proxy go?  Since you've been \nconnected before, your addr.dat contains known node addresses, but \nwithout IRC to know which ones are online, it takes a long time to find \nthem.  There are normally 1 to 3 other nodes besides you that can accept \nincoming connections, and existing nodes that already know you would \neventually connect to you.  How many connections did you get, and how \nlong did it take?  I guess to know whether it successfully connected \noutbound through TOR you'd need to search debug.log for \"connected\".\n\nTo originally connect with TOR without connecting normally once to get \nseeded, you'd have to know the address of an existing node that can \naccept incoming connections and seed it like this:\nbitcoin -proxy=127.0.0.1:9050 -addnode=<ip of a node>\n\nIf some nodes that accept incoming connects were willing to have their \nIP coded into the program, it could seed automatically.  Or some IP seed \naddresses posted on a Wiki page with the instructions.\n\nAnother option is to search the world again for an IRC server that \ndoesn't ban TOR nodes.  Or if we could get someone to set one up.  IRC \nservers ban TOR because they have actual text chat on them... if there \nwas one with just bots and junk then it wouldn't care.  Probably should \npost a question on the forum or the mailing list and see if anyone knows \none.\n\nAnother problem is that TOR users can't accept incoming connections, and \nwe have so few that can.  If everyone goes to TOR, there won't be any \nnodes to connect to.\n\nWe have a shortage of nodes that can accept incoming connections.  It \ngenerally ranges from 2 to 4 lately.  We need to emphasize the \nimportance to people of setting up port forwarding on their router. \nEvery P2P file sharing program has instructions how to do it.  We should \nhave a paragraph on the bitcoin.sourceforge.net homepage urging people \nto set up port forwarding to accept incoming connections, and a link to \na site that describes how to do it for each router."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 04 Nov 2009 05:38:17 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux build", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #54"}, "authorText": "It was almost there.  I fixed a few things and got it to finish \ncompiling but I don't know the system libraries to link to so there's \nundefined references galore.\n\nI changed the makefile to look for things under /usr/local and in their \ndefault \"make install\" locations.  I wrote what I did and switches I \nused in build-unix.txt.  I'm currently using wxWidgets 2.8.9 for now \nbecause it's the same version as on Windows and I don't want to wonder \nif there's version change issues at the same time as platform change. \n2.8.10 or 2.9.0 are probably fine though.  I went with the \nsingle-library compile of wxWidgets since we're linking to almost every \nlibrary anyway.\n\nI added xpm files, which is what they use everywhere else but Windows \ninstead of RC files.  They're clever C files that define graphics in \nstatic arrays.  The bitcoin icon has 5 different versions but I couldn't \nfigure out how that works in xpm so I only put the biggest one.  Maybe \non GTK it scales it for you.  I don't know if these are right or what, \nbut they compile."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 04 Nov 2009 20:38:03 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux build", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #55"}, "authorText": "Just letting you know I'm still working on the Linux build so we don't \nduplicate work.  I got it linked and ran it and working through runtime \nissues like getting it switched to load bitmaps from xpm instead of \nresources.\n\nThere are debian packages available for some of the dependencies instead \nof having to compile them ourselves:\napt-get install build-essential\napt-get install libgtk2.0-dev\napt-get install libssl-dev\n\nI need to see if Berkeley DB or Boost have packages.\n\nWe'll shared-link OpenSSL, I'm pretty sure it's always preinstalled on \nLinux.  GTK has to be shared linked.  I'm not completely sure if it's \npreinstalled by default."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 05 Nov 2009 05:31:03 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux build", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #57"}, "authorText": "I merged the linux changes into the main trunk on SVN.  It compiles and \nruns now.  I think all the problems are in the UI.  The menus quickly \nquit working and it doesn't repaint when it's supposed to unless I \nresize it, and the UI is getting some segfaults.  Shouldn't be too hard \nto debug with gdb.  I haven't tested if it plays nice with other nodes \nyet so keep it off-net.\n\nbuild-unix.txt and makefile.unix added"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 05 Nov 2009 15:25:27 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Proxy", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #58"}, "authorText": "[...]\n\ndebug.log moved to the data directory \"%appdata%/bitcoin/debug.log\"\n\n7 inbound and 2 outbound sounds about as expected.\n\nMy last SVN commit included an overhaul of the code that selects the \norder of addresses to connect to, trying them in the order of most \nrecently seen online, so it should get connected in a more reasonable \namount of time if IRC is unavailable.  IRC is really only needed to seed \nthe first connection, but we've been using it as a crutch to get \nconnected faster.\n\n[...]\n\nThat would be great.  It's only TOR users that need it, so in the \ninstructions saying \"bitcoin -proxy=127.0.0.1:9050 -addnode=<someip>\", \nsomeip could be an actual static IP, with the wiki free-for-all \nadd-your-ip list nearby or a link to it.  There should be a link to that optional step, add your IP to this list now that you can accept incoming \nif you're static.\n\nDo you think anonymous people are looking to be completely stealth, as \nin never connect once without TOR so nobody knows they use bitcoin, or \njust want to switch to TOR before doing any transactions?  It's just if \nyou want to be completely stealth that you'd have to go through the \n-proxy -addnode manual seeding.  It would be very easy to fumble that \nup; if you run bitcoin normally to begin with it immediately \nautomatically starts connecting."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 05 Nov 2009 17:33:58 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Forum", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #59"}, "authorText": "Now that the forum on bitcoin.sourceforge.net is catching on, we really \nshould look for somewhere that freehosts full blown forum software.  The \nbitweaver forum feature is just too lightweight.  I assume the \"Forum\" \ntab on the homepage can link out to wherever the forum is hosted.\n\nI've seen projects that have major following just from forum talk and \npie-in-the-sky planning without even having any code yet.  Having a lot \nof forum talk gives a project more presence on the net, more search \nhits, makes it look big, draws new users in, helps solve support \nquestions, hashes out what features are most of wanted.\n\nIt would be a big plus if it could support SSL, at least for the login \npage if not sitewide.  Multiple people on the forum have expressed \ninterest in TOR/I2P, and those users need SSL because a lot of TOR exit \nnodes are probably password scrapers run by identity thieves.  A lot of \nthe core interest in Bitcoin is going to be from the privacy crowd.\n\nAny ideas where we can get a free forum?  Maybe we should look at where \nsome other projects have their forums hosted for ideas where to look."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 06 Nov 2009 06:20:15 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux build", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #60"}, "authorText": "It works reliably on Linux now, except if it uses wxMessageBox() outside \nthe GUI thread, it'll crash because non-GUI threads can't open a window \non Linux.  I haven't got to fixing that yet.  I've been running my \nstress test on it and it's functioning normally.\n\nMost of wxWidgets is not thread-safe to use in threads other than the UI \nthread, but as a rule of thumb on Windows anything not UI related is OK. \n  It turns out its more thread-unsafe on GTK.  I replaced a bunch of \nstuff at once so I don't know if it was just one thing (probably \nRepaint), but I have to assume even any wx function that uses wxString \nis not safe to use outside the UI thread.  So dang, there goes all the \nnice wxWidgets portability support functions.  I left a few simple \nthings like wxThread::GetCPUCount() that I checked the source and it's \nall numerical, and wxMutex has to be safe or it'd be useless.\n\nThere's an issue that if you exit and run it again right away, it can't \nbind port 8333.  The port frees up after about a minute.  Unless I'm \nmissing something, I am closing the socket before exit, so I don't know \nwhat else I can do.  Maybe this is just something about Linux that it \ntakes a minute to free up a port you had bound.  Possibly a security \nfeature so some trojan doesn't kill the web server and quickly jump into \nits place and pick up all the client retries.\n\nStill gotta figure out how to do the xpm version of the icon correctly.\n\nI wonder if the database dat files are interchangeable with Windows."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 08 Nov 2009 05:23:13 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Linux build ready for testing (attached)", "to": "Martti Malmi <mmalmi@cc.hut.fi>, Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #62"}, "authorText": "bitcoin-linux-0.1.6-test1.tar.bz2 attached"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 08 Nov 2009 05:52:11 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Linux build ready for testing", "to": "Martti Malmi <mmalmi@cc.hut.fi>, Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #63"}, "authorText": "The Linux build is ready for testing on the network.  It seems solid.  I \nsent the executable as an attachment in the previous e-mail, but if the \nmail server didn't let it through (it's 12MB), you can download it here:\nhttp://rapidshare.com/files/303914158/linux-0.1.6-test1.tar.bz2.html"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 08 Nov 2009 17:39:39 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux build ready for testing", "to": "Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #66"}, "authorText": "In the debug.log, it requests the block list, receives the block list, \nthen begins uploading the list of blocks requested.  It doesn't receive \nthe blocks, but it didn't run long enough for me to be sure it would \nhave had time yet.  Everything else looks normal.\n\nHow long did you run it?  It could take a few minutes to start \ndownloading the blocks.  Especially if you're on a cable modem, the \nuplink can be much lower bandwidth so it would take some time to upload \nthe block request list.\n\nIf you run it again and it still doesn't download blocks, keep it \nrunning for several hours at least and then send me the debug.log.  That \nshould give it time for my node to connect to you and I could see what \nit says on my side and correlate it with your debug.log.\n\nYou're right about the minimize on close option, there's no reason that \ncan't be separate.  Martti originally had it separate and I made it a \nsub-option, my bad.  I'll change it back."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 08 Nov 2009 18:48:38 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Forum", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #67"}, "authorText": "I'm not really a fan of that type of forum layout.  The thread list only \nfits about 4 threads on a page, posts are treated like news articles or \nblog posts with reply comments at the bottom.  It's more of a social \nnetworking site, not really conducive to technical discussion.\n\nI'm thinking phpBB or IPB or similar.  One line of text per thread, \nsmall fonts, efficient use of vertical space.  Most people are already \nfamiliar with the interface."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 09 Nov 2009 01:23:59 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux build ready for testing", "to": "Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #68"}, "authorText": "[...]\n\nAbout how long did it take to start?  It could be the node that you \nhappened to request from is slow.  The slow start is consistent with the \nslow download speed.\n\nI'd like to look at your current debug.log file and try to understand \nwhat's going.  It might just be a really slow connection on the other \nside, or maybe something's wrong and failed and retried.  Taking too \nlong could confuse other users.\n\nMartti, how long did it take to start downloading blocks when you ran \nit, and how fast did it download?\n\n[...]\n\nIt already uses SO_REUSEADDR so it can bind to the port if it's in \nTIME_WAIT state after being closed.  The only time it should fail to \nbind is when the program really is already running.  It's important that \ntwo copies of Bitcoin not run on the same machine at once because they \nwould be modifying the database at the same time.  There is never any \nneed to run two on one machine as coin generation will now use multiple \nprocessors automatically.\n\nI'm not sure what those lib errors are, I'll do some searching."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 09 Nov 2009 05:42:59 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux build ready for testing", "to": "Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #69"}, "authorText": "Thanks for that, I see what happened.  Because the first one was slow, \nit ended up requesting the blocks from everybody else, which only bogged \neverything down.  I can fix this, I just need to think a while about the \nright way.\n\nThere's no risk in shutting down while there are unconfirmed.  When you \nmake a transaction or new block, it immediately broadcasts it to the \nnetwork.  After that, the increasing #/confirmed number is just \nmonitoring the outcome.  There's nothing your node does during that time \nto promote the acceptance.\n\nNow that I think about it, when you close Bitcoin, it closes the main \nwindow immediately but in the background continues running to finish an \norderly flush and shutdown of the database.  Before I implemented that, \nit was annoying having a dead hung unresponsive window hanging around. \nUntil it finishes the orderly shutdown in the background, the port would \nbe locked, and this is an important protection to make sure another copy \ncan't touch the database until it's done.  I haven't seen the shutdown \ntake more than a few seconds.\n\nIn Wine, there's no way for the Windows version to do SO_REUSEADDR, so \nthat would add 60 seconds (on my system) of TIME_WAIT after the port is \nclosed.\n\nIf you need to transfer between two copies, you could send it to the \nother's bitcoin address.  The receiving copy doesn't have to be online \nat the time.\n\nThe command line to use a different data directory is\nbitcoin -datadir=<directory>\n\nFor example, on Linux, the default directory is (don't use ~)\nbitcoin -datadir=/home/yourusername/.bitcoin\n\nYou shouldn't normally have any need to use this switch.  It still won't \nlet you run two instances at once."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 09 Nov 2009 19:30:53 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux build ready for testing", "to": "Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #71"}, "authorText": "You really don't want to keep running in Wine, you're getting database \nerrors (db.log).  You probably developed these rituals of transferring \nto a fresh install to cope with database corruption.  If there is a way \nto lose unconfirmed blocks, it would have to be the database errors. \nAny problems you find in the Linux build can be fixed.  The Wine \nincompatibility deep inside Berkeley DB is unfixable.\n\nI think GCC 4.3.3 on the Linux build optimized the SHA-256 code better \nthan the old GCC 3.4.5 on Windows.  When I was looking for the best \nSHA-256 code, there was a lot of hand tuned highly optimized SHA1 code \navailable, but not so much for SHA-256 yet.  I should see if I can \nupgrade MinGW to 4.3.x to get them on a level playing field."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 09 Nov 2009 19:41:11 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux build ready for testing", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #72"}, "authorText": "You got a lot done with the Linux build, autostart, minimize to tray, \nsetup and everything, it's really appreciated.  Good luck on your C++ \nproject."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 10 Nov 2009 16:46:04 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux - dead sockets problem", "to": "Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #73"}, "authorText": "I see what happened.  All your sockets went dead somehow.  You had no \ncommunication with the network, but because you had 8 zombie \nconnections, it thought it was still online and kept generating blocks. \n  You can tell this is happening when your blocks are numbered \nsequentially, without other people's blocks interspersed, like:\n2/unconfirmed\n3/unconfirmed\n4/unconfirmed\n5/unconfirmed\n6 blocks\n7 blocks\n\nIt's implausible that you would be the only one to find blocks for 6 \nblocks in a row like that.\n\nWhen you exited and restarted, it connected and downloaded 45 blocks \nthat the network found in your absence.  Since your blocks were not \nbroadcast to the network immediately, the network went on without them.\n\nIt sounds like you had exactly the same problem on Wine.  There's \nclearly something about socket handling on Linux that's effecting it \neither way.\n\nI'll start researching this.  Ultimately if I can't find the root of the \nproblem, I'll have to make some kind of mechanism to watch for an \nabsence of messages and disconnect.  The only workaround for you right \nnow would be to exit and restart more often.\n\nAll but one of your node connections went dead at the same time, one \nshortly after.  IRC was still working, so it wasn't that you were \noffline from the internet.\n\nI wonder if the status of blocks should say \"#/unconfirmed\" all the way \nup to maturity (119/unconfirmed then 120 blocks) instead.  The meaning \nof the number isn't as strong for blocks as for transactions.\n\nI think it would be an improvement not to count one's own blocks as \nconfirmations.  A drawback would be that the status numbers shown by \ndifferent nodes would not match.  The status number would no longer be \ncoordinated with the maturity countdown on blocks either.  A lighter \noption would be a special case only if all confirmations are your own."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 11 Nov 2009 00:39:19 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux - linux-0.1.6-test2", "to": "Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #74"}, "authorText": "I fixed a few places I found where it was possible for a socket to get \nan error and not get disconnected.  If your connections go dead again, \nit should disconnect and reconnect them.  I also implemented an \ninactivity timeout as a fallback.\n\nThis also includes a partial fix for the slow initial block download.\n\nYou should run with the \"-debug\" switch to get some additional debug.log \ninformation I added that'll help if there are more problems.\n\nlinux-0.1.6-test2.tar.bz2  12,134,012 bytes\nDownload:\nhttp://rapidshare.com/files/305231818/linux-0.1.6-test2.tar.bz2.html"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 11 Nov 2009 00:41:06 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux - linux-0.1.6-test2 attachment", "to": "Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #75"}, "authorText": "linux-0.1.6-test2.tar.bz2 attached"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 12 Nov 2009 05:36:06 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Linux - linux-0.1.6-test3", "to": "Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #76"}, "authorText": "Right now (04:50 GMT) my node is connecting to yours and getting zombie \nconnections each time.  The socket isn't returning an error, just zombie \nwithout notice.  If you're running the linux build right now, it would \nbe interesting to see what the log says on your side.\n\ntest3:\n\nI've added specific code to detect zombie sockets.  It'll detect if the \nsocket hasn't sent or received any data within 60 seconds of connecting, \nand detect if data is queued to send and hasn't sent for 3 minutes.\n\nI think I may have weakened the reconnect speed in test2.  In test3 I'm \nmaking it more determined to reconnect quickly.\n\nI added checking to track whether other nodes received your generated \nblocks.  If none did, it'll warn you in the description:\n\"Generated - Warning: This block was not received by any other nodes and \nwill probably not be accepted!\"\n\nThe status can go to \"#/offline?\" for blocks or transactions you create \nif they don't get out to any other nodes.\n\nWith all this, it should be impossible not to notice as soon as it \nscrews up.  It should hopefully disconnect all the zombie sockets. \nAfter that, whether it's able to make some good connections, or sockets \nis completely hosed and it stays at 0 connections, I don't know.\n\nIf this doesn't work, I guess I'll look at the sourcecode of some other \nP2P apps like BitTorrent and see how they deal with this stuff.  Maybe \nthere's some magic flag or procedure to bash the sockets system back to \nlife.\n\nFile linux-0.1.6-test3.tar.bz2 attached in the next message."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 12 Nov 2009 05:37:58 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "linux-0.1.6-test3.tar.bz2 attached", "to": "Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #77"}, "authorText": "File linux-0.1.6-test3.tar.bz2 attached\n\nlinux-0.1.6-test3.tar.bz2   12,143,473 bytes"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 12 Nov 2009 23:39:44 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "linux-0.1.6-test5 fix for zombie sockets", "to": "Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #78"}, "authorText": "test 5:\n\nI added MSG_DONTWAIT to the send and recv calls in case they forgot the \nsocket is non-blocking.  If that doesn't work, there's now the catch-all \nsolution: another thread monitors the send/recv thread and terminates \nand restarts it if it stops.  It prints \"*** Restarting \nThreadSocketHandler ***\" in debug.log, and an error message displays on \nthe status bar for a while.\n\nBefore terminating, it tries closing the socket that's hung.  If that \nworks, it doesn't have to resort to terminating.\n\nI ran a test where it terminated the thread about 1000 times without \ntrouble, so it should be safe.  The terminate on linux is \npthread_cancel, which throws it into C++'s exception handler.\n\nThe thread calls we were using didn't have terminate, so I created our \nown wrappers in util.h to use CreateThread on windows and pthread_create \non linux, instead of:\n   _beginthread is windows only and lacks terminate\n   boost::thread is really attractive, but lacks terminate\n   wxThread requires you to create a class for every function you might \ncall (yuck)\n\nFile attached in the next e-mail"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 12 Nov 2009 23:42:29 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "linux-0.1.6-test5.tar.bz2 attached", "to": "Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #79"}, "authorText": "12,033,918 linux-0.1.6-test5.tar.bz2"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sat, 14 Nov 2009 05:46:22 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Zetaboards forum", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #80"}, "authorText": "I created a forum on Zetaboards, InvisionFree's new site that they're \nmigrating to.\n\nhttp://s1.zetaboards.com/Bitcoin/index/\n\nI made an admin account you can use to upgrade your own account to admin:\nu: admin\npw: B98VzUUA\n\nBTW, the admin pages have a huge blank space at the top, you have to \nscroll down.\n\nIt doesn't support SSL, but none of them do.  I replaced the ugly \ndefault orange and blue theme with the Frostee theme, which was the only \ndecent looking theme I could find after extensive searching.  Searching \nfor themes is futile, there are thousands of rubbish themes.  It turns \nout the solution is to look at button sets instead \n(http://resources.zetaboards.com/forum/1000328/)\n\nI only created two subforums to begin with.  I'll create new ones as the \nneed arises.  I like to start with a flat namespace until there's enough \nitems to justify subsections.  Technical Support makes sense as a \nseparate section to get that stuff out of the main spotlight so our \ndirty laundry isn't in everyone's face, and to make people feel more \nfree to report bugs there.  Mostly only devs and people checking on a \nbug need read the Technical Support section."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 15 Nov 2009 15:40:29 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Linux update", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #81"}, "authorText": "linux-0.1.6-test5 solved Liberty's zombie socket problem.  The \nMSG_DONTWAIT fixed the root cause, it's not having to terminate and \nrestart the thread.  The sockets are marked non-blocking already, so I \ndon't understand why.  Maybe it forgot.  I suppose if a socket fails and \nthe OS closes it then there's nothing left to remember it was \nnon-blocking, but then accessing a closed handle should return \nimmediately with an error.  There's no MSG_DONTWAIT on Windows, marking \nthe socket as nonblocking is the only way, so if anyone runs the Windows \nversion in Wine it will have to rely on terminating the thread.\n\nThe only problem now is the DB exceptions he's getting.\n************************\nEXCEPTION: 11DbException\nDb::open: Bad file descriptor\nbitcoin in ThreadMessageHandler()\n************************\nEXCEPTION: 11DbException\nDb::close: Bad file descriptor\nbitcoin in ThreadMessageHandler()\n\nI had expected those to be a Wine problem, but he's getting them on \nLinux just the same.  He tried moving the datadir to a different drive, \nno help.  I've never gotten them.  I'm running a stress test that \ncontinuously generates a lot of activity and DB access and never got it.\n\nHe has Ubuntu 64-bit and I have 32-bit, so I'm assuming that's the \ndifference.  Is your Linux machine 64-bit or 32-bit?  Have you ever had \na DB exception? (see db.log also)  Now that the zombie problem is fixed \nin test5, could you start running it on your Linux machine?  We could \nuse a 3rd vote to get a better idea of what we're dealing with here. \nThe DB exception is uncaught, so it'll stop the program if you get it.\n\nBTW, zetaboards insists on displaying \"Member #\", so you better sign up \nsoon and grab a good account number."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 15 Nov 2009 19:15:42 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux update", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #83"}, "authorText": "I'd better install 64-bit then.  I imagine it's something about the \n32-bit version of Berkeley DB on 64-bit Linux.\n\nBTW, in things like the feature list credits, do you want me to refer to \nyou as sirius-m or Martti Malmi?  I think most projects go by real names \nfor consistency."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 15 Nov 2009 20:25:26 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Linux update", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #85"}, "authorText": "At first glance, bitcoinshop.com looks better.  bitcoinexchange.com \nmight be better than bitcoinx.com.\n\nBe careful where you search domain names, many will front-run you.  Even \nnetwork solutions, although they've said they won't if you use their \nwhois page not the homepage.  The only safe place is \nhttp://www.internic.com/whois.html"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 16 Nov 2009 06:20:52 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Db::open/Db::close \"Bad file descriptor\" exception", "to": "Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #86"}, "authorText": "I have an idea for a workaround, but it depends on what files the errors \nare on.  If you've accumulated several errors in db.log, could you send \nit to me? (even if it's rather simple and boring)  Is the file listed \nalways blkindex.dat, or does it include addr.dat or wallet.dat too?"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 16 Nov 2009 19:34:56 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Forum", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #88"}, "authorText": "[...]\n\nWhat do you see as the benefits of switching the wiki?\nSome I can think of:\n  SSL\n  get away from sourceforge's unreliable hosting\n  everything not logged by sourceforge\n\nThe forum feature is about as weak as bitweaver.  We need a full blown \nforum software for that.\n\nMy priority right now is to get a forum going, either phpBB or similar. \n  What do you think of the zetaboards option?  Should we go ahead with that?"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 16 Nov 2009 21:10:22 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Forum", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #90"}, "authorText": "That's a good idea to go in a more web-publishing CMS type direction \nlike Drupal.  That's a better fit and can produce a better looking \nwebsite than a wiki.  I think I was wrong about wiki.  Only a few \nspecific people will do any website design work and those people can go \nahead and have a separate login.  In that case, login integration with \nthe forum doesn't matter much.  For security, I'd almost rather have a \ndifferent login than be constantly checking the forum with the same \nlogin that could pwn the website.\n\nDrupal's forum is less bad than the wikis, but still a long way from \nsomething I would want to use.\n\nzetaboards pros and cons:\n\npros:\n- we don't have to worry about bandwidth\n- they handle the backend management and security patches\n\ncon:\n- lack of SSL\n- lack of privacy, everything is logged\n- lack of control over the php code for customization\n- no CAPTCHA, and if they add one later it might be unacceptable flash\n- ads (could pay to get rid of them later if we care enough)\n- there's always the risk they abruptly cancel the site for some petty \nreason"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 17 Nov 2009 03:41:26 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "linux-0.1.6-test7", "to": "Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #91"}, "authorText": "test 7:\n\nBackup your data directory before running this, just in case.\n\nWorkaround for the Db::open/Db::close \"Bad file descriptor\" exception. \nMight also make the initial block download faster.  The workaround is to \nopen the database handles and keep them open for the duration of the \nprogram, which is actually the more common thing to do anyway.  If we're \nnot closing and opening all the time, the error shouldn't get a chance \nto happen.\n\nThe one exception is wallet.dat, which I still close after writing is \nfinished so I can flush the transaction logs into the dat file, making \nthe dat file standalone.  That way if someone does a backup while \nBitcoin is running, they'll get a wallet.dat that is valid by itself \nwithout the database transaction logs.\n\nThis is a restructuring of the database handling, so we might find some \nnew deadlocks.  Usually if it deadlocks, either the UI will stop \nrepainting, or it'll stop using CPU even though it still says Generating."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 17 Nov 2009 16:57:26 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Forum", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #92"}, "authorText": "[...]\n\nAnother issue I thought of with zetaboards: most free forum sites won't \nlet you export the user account database if you want to move.  I don't \nknow why I don't see any other software projects using a free forum, but \nI have to assume there might be a reason we would discover later.\n\nIf you can install phpBB3 on your VPS, that's probably the better option.\n\n From what I've seen on other forums, if the cost of bandwidth becomes \nan issue, a small Google Adwords (text links) at the top generates more \nthan the cost of bandwidth even for very low value traffic like gaming. \n  This would be much higher value traffic well targeted for high paying \ngold merchant keywords and VPN hosts.  It could eventually be a valuable \nrevenue stream you wouldn't want to give away to some free site.\n\nI want to pre-announce some of the features in version 0.2 on the forum \nand try to get some anticipation going.  Even if hardly anyone else is \nposting, I have seen project forums where most of the posts are the \nauthor announcing what's going on with the latest changes.  Users can \nsee progress going on, see that it's improving and supported and not \nabandonware.  It's a little like a blog in that case, but easier for \nusers to use it as a searchable FAQ and better organized.  Whenever I \ngoogle search software questions, most of the hits are forum posts."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 18 Nov 2009 04:35:32 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: linux-0.1.6-test7", "to": "Liberty Standard <newlibertystandard@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #95"}, "authorText": "Finally an easy one.  I see a way that could happen on a long operation \nsuch as the initial download.  The TryLock bug is unrelated to the db \nstuff.  Fix will be in test8.\n\nI've been able to reproduce the db::open/close exception 3 times now on \n32-bit linux by hitting it with a continuous flood of non-stop requests. \n  It looks like even periodically closing the wallet.dat database to \nflush it gets the db::close exceptions.  I'm disabling the wallet flush \nfeature on Linux.  On Linux we'll never close a database handle until \nwe're ready to exit.  So far with this disabled, no exceptions.\n\nI'm also implementing the orderly initial block download.  Instead of \nnaively requesting all the blocks at once, it'll request batches of 500 \nat a time.  This way, it'll receive the blocks before the retry timeout, \nso it shouldn't go requesting it from other nodes unless it actually \ndoesn't receive them or it's too slow.  The change is in the requestee's \nside, so this functionality won't be visible until your initial block \ndownload is coming from a node that has the new version.\n\nI'm going to test this some more before sending test8."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 18 Nov 2009 05:14:45 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Db::open/Db::close \"Bad file descriptor\" exception", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #96"}, "authorText": "Thanks.  The db::open/close errors confirm the pattern.\n\nMore interesting is the zombie sockets activity towards the end, and the \nsocket thread monitor tripped but didn't get it going again.  Was the \nmachine disconnected from the net?  MSG_DONTWAIT in test5 solved the \nzombie problem for Liberty.  What test version were you running?  (I \nshould print the test version in the log)"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 18 Nov 2009 05:32:22 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Forum", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #97"}, "authorText": "That's great, this is going to fun!  I'll research what people say about \nthe two."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 20 Nov 2009 05:14:56 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "SMF forum, need a mod installed", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #99"}, "authorText": "I've been configuring the SMF forum.  They're saying SMF is better \nwritten than phpBB and more reliable, so if I can get SMF to look right, \nthat's the preferable choice.\n\nMost forums run vBulletin (big-boards.com lists 1376 vBulletin, 275 \nInvision, 245 phpBB and 41 SMF), so if you don't look like vBulletin or \nInvision, it looks like you compromised because you couldn't afford \nvBulletin.  SMF's UI started out further away from the standard look, \nbut I've been able to use CSS to make it look more like the others.\n\nI've done as much as I can with CSS, the rest requires editing PHP files \nand uploading images.  The forum doesn't have a built in file \nupload/edit admin feature, it's added separately as the SMF File Manager \nmod.  I uploaded the mod but some files need to be chmod 777 so it can \ninstall.  If you go to Admin->Packages->Browse Packages and click on \nApply Mod, it offers to do it automatically if you enter an ftp login.\n\nSomeone says you might also have to\nmkdir /var/www/bitcoin/smf/packages/temp\n\nThe error in the error log is:\nfailed to open stream: Permission denied\nFile: /var/www/bitcoin/smf/Sources/Subs-Package.php\n(I'm sure that's just the first file)\n\nIs it OK to go live with this SMF installation when I'm finished \nconfiguring it?  I should be able to point forum.bitcoin.org to it.\n\nLiberty reports that linux-test8 has been running smoothly.  My tests \nhave been running fine as well.  The Linux version looks fully \nstabilized to me.\n\nGood news: he says he made his first sale of bitcoins.  Someone bought \nout all he had.  I had been wondering whether it would be buyers or sellers."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 20 Nov 2009 22:09:41 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: SMF forum, need a mod installed", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #102"}, "authorText": "[...]\n\nDNS entry.\n\nI'm thinking of merging the bitcoin.org information with your site \ncontent so I can switch the whole bitcoin.org domain over.  We need to \nreplace the current bitcoin.org site with a user-oriented site before \nthe release.\n\nIf the website and forum switch at the same time, then forum.bitcoin.org \nisn't necessary unless we want it that way for looks.\n\nHave you decided on the CMS to use?  I should research Drupal and other \nCMSes and see what's the most popular.\n\n[...]\n\nThe linux version, setup exe, tor option and better website/forum will \nall increase the percentage of visitors who can use it, and the \nautostart and minimize to tray will increase how many keep running it. \nAll those factors multiply together.\n\n[...]\n\nIt's good to start low and only have the price go up.\n\nI really like that he explains the concept that the cost of electricity \nis a minimum floor under the price.  At a minimum you either have to pay \nthe cost in electricity or pay someone the cost of production to make \nthem for you."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sat, 21 Nov 2009 07:02:20 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: SMF forum, need a mod installed", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #103"}, "authorText": "Thanks, that worked, I got File Manager installed with SSH.  I also \nuploaded a few themes into Drupal.  I haven't thoroughly gone through \nall the available themes yet.\n\nLooked around at CMSes, Drupal and Joomla are popular.  Consensus is \nJoomla has a better selection of themes and is easier to learn, though \nDrupal may be more intuitive for programmers and customization.  Joomla \nbetter for CMS, Drupal better for blogs.  Drupal's URLs are search \nengine friendly, Joomla not.\n\nBoth have SMF bridge modules available.  For future reference, Drupal's \nis named \"SMFforum Integration\"."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sat, 21 Nov 2009 21:46:52 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: SMF forum, need a mod installed", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #105"}, "authorText": "I'll go ahead with setting up Drupal then.\n\nI don't think we should make the site https by default.  It's still very \nunusual for the public part of sites to be https, probably because it \nintroduces potential technical complications, delays and greater server \nload.  As a user I'm a little annoyed when it takes time to verify the \nidentity of some no-name site I casually came across.  For me it seems \nlike https sites fail to load a lot more often.\n\nThe important thing is to have SSL available for those who need it. \nThose who need SSL I think know to try inserting an \"s\" after http and \nsee if it works.  SMF has code that changes all the links to https if \nthe URL handed in is https.\n\nWe could add a note on the registration page that if you want SSL, you \ncan change http to https at any time and approve the self-signed \ncertificate, or a link that does it, and the TOR page can mention it too.\n\nWe can look into getting a certificate later when things have settled \ndown.  With Class 1, no changes are allowed for a year, which is a risk \nif we find issues with the current host and have to change IP."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 22 Nov 2009 19:47:56 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "SEO friendly site transition", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #106"}, "authorText": "We need to do a continuity transition with bitcoin.org so the search \nengines don't think this is a new site and reset the site start date and \nPR data.  Google allows a certain number of properties like IP address \nor content of the site to change without deleting your site history.  To \nplay it safe, when the IP address changes, the content better stay the \nsame and vice versa.  Even though not much rank has accumulated yet, the \noriginal start date becomes extremely important if the site gets popular \nlater.\n\nSteps:\n1) copy the current bitcoin.org index.html to the new server exactly as-is.\n2) switch the bitcoin.org DNS entry.\n3) keep working on the drupal site behind the scenes.\n4) after google has had time to update its records, we can switch over \nto the drupal site.\n\nThe timing works out well because we can switch to the new forum now and \nrelease the drupal site later when we're ready.\n\nI'll see if I can figure out how to temporarily move drupal aside to \ndrupal.php or /drupal/ or something where we can still easily get in and \nwork on it."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 23 Nov 2009 05:48:19 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Access permissions required to fix Drupal", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #108"}, "authorText": "Drupal's .htaccess file which uses mod_rewrite to allow clean URLs \nwithout the ? parameter is not working because its changes are rejected \nbecause Apache is not configured with \"AllowOverride All\".  This is \nneeded to make Drupal coexist with the other site the way we want.\n\nI need access to change these files to fix it:\n  /etc/apache2/sites-available/default\n  /etc/apache2/sites-available/default-ssl\n  /etc/apache2/httpd.conf\n\nHere's the planned fix.  If you do it yourself, please still give me \naccess to httpd.conf in case I need to change it again later.\n\nIn /etc/apache2/sites-available/default\nchange the 2nd instance of \"AllowOverride None\"\n      to \"AllowOverride All\"\n\nand in /etc/apache2/sites-available/default-ssl\nchange the 2nd instance of \"AllowOverride AuthConfig\"\n      to \"AllowOverride All\"\n\nreplace\n  /etc/apache2/httpd.conf\nwith\n  /home/maintenance/httpd.conf\n\nThis probably requires Apache to be restarted after.\n(apache2ctl graceful)"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 26 Nov 2009 00:26:33 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "bitcoin.org DNS change went through", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #110"}, "authorText": "The bitcoin.org DNS change went through about 12 hours ago.  I'll wait \nanother 12 hours and then change the Forum tab on \nbitcoin.sourceforge.net to go to http://www.bitcoin.org/smf/\n\nFor future reference, the changes in SMF to update the base url were:\n   server settings->Forum URL\n   themes and layout->attempt to reset all themes\n   there's a path in smileys and message icons"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 26 Nov 2009 17:45:42 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Bitweaver menu editor broken", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #111"}, "authorText": "The Bitweaver menu editor is broken, I can't change the Forum link.  The \n\"create and edit menu items\" page comes up blank for me:\n\nhttp://bitcoin.sourceforge.net/nexus/menu_items.php?menu_id=2\n\nYou try it, I'm stumped.\n\nThe Forum link should be changed to:\nhttp://www.bitcoin.org/smf/"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 30 Nov 2009 20:34:20 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin.org", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #117"}, "authorText": "Thanks, I haven't settled on a theme yet.  My first experiment was to \ntry something besides yet another blue site.  Another line of thought is \nthat it should be like a bank website, stately, professional and \nofficial looking to support confidence in financial matters.\n\nThe logo's a little too Disco/web-1990's.  I still like your bitweaver \none better, I recreated it with text as a placeholder for now.  When the \ntheme is more settled, I'll think about a matching logo.\n\nGood idea about the Sourceforge tag, we can use all the graphics we can get.\n\nI have more to do before we go live, and we need to give the search \nengines more time."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 02 Dec 2009 17:47:48 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin.org", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #119"}, "authorText": "What Windows version/browser doesn't font anti-aliasing work on?  IE 6 \non XP anti-aliases, and versions below that have less than 1% market share.\n\nThere's a transaction fee of 0.01 per KB after the first 1KB for \noversized transactions.  The first 1KB is free, small transactions are \ntypically 250 bytes.  Doubleclick on the transaction.  Think of it like \npostage by weight.\n\nThe solution is an extra dialog when sending, something like \"This is an \noversized transaction and requires a transaction fee of 0.20bc.  Is this \nOK?\"  (is that text good enough or any improvements?)  I have the code \nalready, I'll put it in.\n\nThen we wouldn't have to explain the 10,000.20bc transaction, but may \nstill have to explain who the transaction fee goes to."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 04 Dec 2009 04:24:41 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin.org", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #121"}, "authorText": "[...]\n\nThat's strange, I've seen Firefox 3.5 on XP anti-alias large fonts. \nWell anyway, your way is safer.\n\nI changed it back to text for now though so I can keep tweaking the \ncolours.  Drupal puts the <span> tags and junk in the browser title but \nthat's fine for testing.\n\nI added some instruction text on the homepage below the screenshots.\n\n[...]\n\nTrue.  I suppose the dialog could make it worse by giving people a \nchance to experiment with breaking it up.\n\nI'm making some changes.  The largest free transaction will be 60KB, or \nabout 27,000bc if made of 50bc inputs.  I hope that's high enough that \nthe transaction fee should rarely ever come up.  v0.2 nodes will take \nfree transactions until the block size is over 200K, with priority given \nto smaller transactions.\n\nIt's best if you don't talk about this transaction fee stuff in public. \n  It's there for flood control.  We don't want to give anyone any ideas.\n\n[...]\n\nYou found an infrequent bug in CreateTransaction.  It wrote the \ntransaction for 10000.20 with a fee of 0.22.  If you look at the \ntransaction on the sender's side, it'll be a debit 10000.42 with \ntransaction fee 0.22.  The bug was that it had to make a rare third pass \non calculating the fee, and incorrectly added the first pass' fee to the \namount being sent.  Will fix."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 06 Dec 2009 03:21:00 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Sourceforge tracker", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #122"}, "authorText": "I added the sourceforge tracker to bitcoin.sourceforge.net.  The \ncomplete selection of links is below if you want a different one.\n\nI had it on bitcoin.org for a minute, but took it off.  It breaks the \nlock in SSL mode with a mixed content warning, \"partially encrypted\" and \n\"contains unauthenticated content\".  Anyway, do we really want \nsourceforge tracking everyone?  It's more privacy friendly without it.\n\n\n---\nThe available logos and the correct HTML to use for the Bitcoin project are:\n\n[...]"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 08 Dec 2009 05:43:33 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Drupal site online", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #124"}, "authorText": "I went ahead and put the new Drupal site online.  Enough time has passed \nfor a safe transition, and the site looks good.  There's more work I \nshould do on the theme, but it's good enough so far.  This is a huge \nimprovement over the old bitcoin.org page."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 11 Dec 2009 03:30:10 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "custom3 theme", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #126"}, "authorText": "I wasn't satisfied with my custom2 theme.  It felt crowded, the \nheader/logo seemed wrong and the heavy left margin stationery style is \noutdated.\n\ncustom3 online now is a more standard layout similar to a lot of \ncommercial software homepages.  Maybe it's just me, but I really like \nthe random blue squares."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 16 Dec 2009 04:57:36 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: RC2", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #129"}, "authorText": "[...]\n\nMost of the fixes are on the sender's side, so if you were downloading the network upgrades to 0.2.\n\nHow long did the initial download take?"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 16 Dec 2009 16:54:46 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Planned release announcement text", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #131"}, "authorText": "Here's the planned release announcement text.  Probably releasing shortly.\n\nBitcoin version 0.2 is here!\n\nDownload links:\nWindows Setup Program\nWindows Zip File\nLinux (tested on Ubuntu)\n\nNew features\n\nMartti Malmi\n  - Minimize to system tray option\n  - Autostart on boot option so you can keep it running in the \nbackground automatically\n  - New options dialog layout for future expansion\n  - Setup program for Windows\n  - Linux version\nSatoshi Nakamoto\n  - Multi-processor support for coin generation\n  - Proxy support for use with TOR\n  - Fixed some slowdowns in the initial block download\n  - Various refinements to keep the network running smoothly\n\nWe also have a new forum at http://www.bitcoin.org/smf/ if you have any \nquestions.\n\nThanks to Martti Malmi (sirius-m) for his coding work and for hosting \nthe new site and forum, and thanks to New Liberty Standard for testing \nthe Linux version.\n\nSatoshi Nakamoto"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 17 Dec 2009 06:49:02 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "[bitcoin-list] Bitcoin 0.2 released", "to": "bitcoin-list@lists.sourceforge.net"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #132"}, "authorText": "Bitcoin 0.2 is here!\n\nDownload (Windows, and now Linux version available)\nhttp://sourceforge.net/projects/bitcoin/files/\n\nNew Features\n\nMartti Malmi\n  - Minimize to system tray option\n  - Autostart on boot option so you can keep it running in the \nbackground automatically\n  - New options dialog layout for future expansion\n  - Setup program for Windows\n  - Linux version (tested on Ubuntu)\nSatoshi Nakamoto\n  - Multi-processor support for coin generation\n  - Proxy support for use with TOR\n  - Fixed some slowdowns in the initial block download\n\nWe also have a new forum at http://www.bitcoin.org/smf/\n\nMany thanks to Martti (sirius-m) for all his development work, and to \nNew Liberty Standard for his help with testing the Linux version.\n\nSatoshi Nakamoto"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 22 Dec 2009 19:00:41 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin stuff", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #134"}, "authorText": "Thanks for creating the maintenance account, it would have been \nimpossible to do all that without it.  I'm really always going to need \nit.  OK, I changed the password to a 20 character random password.\n\nThat's a good domain.  People rarely type domain names anymore, they use \nautocomplete or click links on search engines.\n\nI need to make a way for you to programmatically get new generated \nbitcoin addresses.  Either that or you could have them send to your IP \naddress, but then you have to rely on them to put the order number in \nthe comment.\n\nWhen generating the new address, there can be an option to add an entry \nto the address book associated with the address, so the received \ntransaction will be labelled.  I kinda hid the labels after early users \nfound them confusing, but it would be very helpful for this application. \n  You have to widen up the comment column to see them.\n\nAre you going to manually review and enter orders, at least to begin \nwith?  I sure would.\n\nI'm thinking I should move the UI in the direction of having the user \nask for their bitcoin address when they want one.  \"give me a bitcoin to \nreceive a payment with\".  I suppose next to the send button, there would \nby a receive button, you press it and it says \"here's a new address to \nuse, here's the button to copy it to the clipboard, do you want to label \nit?\" and maybe some explanation about why you shouldn't reuse addresses.\n\nOr maybe just a \"New Address\" button next to the address box that you \nshould hit each time to change it."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 23 Dec 2009 17:53:18 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin stuff", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #136"}, "authorText": "[...]\n\nI had been wondering why everyone keeps harping on no-UI, when already \nyou can run it with only a small icon on the tray, which is common for \nserver services on Windows.  So I guess this is why.  I had chalked it \nup to unix snobbery if they couldn't abide a tiny little icon on a \ndesktop they never see.\n\nNot opening any windows is easy, but it may fail because the gtk \nlibraries aren't there.  wxWidgets has __WXBASE__ for \"Only wxBase, no \nGUI features\".  You could try building for that instead of __WXGTK__ and \nsee what happens.  It would be preferable if there's any way to do it as \na command line switch on the same executable, rather than yet another \nbuild variation to release.\n\nHow much memory do you have to work with?  Bitcoin necessarily takes a \nfair bit of memory; about 75MB on Windows.  Is that a problem?\n\nCommand line control is one of the next things on the list.  I want to \ndesign the API carefully.\n\nReceiving payments is the part that has a lot of design choices to be \nmade.  The caller needs to identify the transactions of interest, that's \nwhere the one-bitcoin-address-per-transaction model helps.  Searching \nthe comments text for an order number is another possibility.  There's \npolled, asking what has been received to the given bitcoin address, and \nevent driven.  I guess in event driven, bitcoin would be told to run a \ncommand line when a certain amount is received to a certain bitcoin address."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 25 Dec 2009 16:11:14 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin stuff", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #138"}, "authorText": "You're right, I was looking at a test run with 250,000 blocks... duh.\n\nA normal one shows 17MB memory usage and 10MB VM size."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 04 Feb 2010 02:20:10 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Exchange ideas", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #141"}, "authorText": "You could always exchange for Liberty Reserve.  It's an online currency \nsimilar to e-Bullion, Pecunix or Webmoney that allows exchanges no \nquestions asked and with privacy.\n\nLR and the others are hard to buy but easy to cash out.  Hard to buy \nbecause exchangers are very cautious about getting ripped off by \nreversed payments, so they require more details and holding time. \nCashing out is very easy.  LR is non-reversible, so there are oodles of \nexchanges eager to turn LR into any kind of payment.\n\nBitcoin is the reverse, in that it's easy to get Bitcoins just by \ngenerating them.  It would be easy for customers to go \nbitcoin->LR->cash, bitcoin->LR->gold, bitcoin->LR->paypal or maybe they \njust want to save the money, then just bitcoin->LR.\n\nThere's also the idea BTC2PSC had to sell paysafecards for bitcoins. \nEither online delivery by sending the card number by e-mail, or delivery \nof the unopened physical card in the mails.  There are many variations \nof these cards.  In some countries, they're called Gift Cards, and can \nbe used wherever credit cards are accepted.  I think they're used more \nby people who don't have the credit history to get a real credit card, \nso they buy gift cards themselves to pay for things that require a \ncredit card."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 04 Feb 2010 01:32:50 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Exchange options", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #142"}, "authorText": "Don't rush ahead and get yourself rejected from all the payment options \nbefore you've had time to see if there's a better approach.  I suggest \nyou wait before contacting any more payment processors.  You may get \nideas from things other users come up with and try.\n\nJust some random incomplete ideas: There may be a way to position it as \nan intermediate credit for micropayments for some virtual good or \nsomething.  Or maybe if the payments are only in one direction.  If you \nonly buy bitcoins, then you're only sending money out not taking \npeople's money, that would still be useful to peg the currency.  That \nmight be payment for computer time.\n\nCredit card is only one way.  Don't even talk about the idea of \nreturning money to customer's credit cards.  Credit card companies hate \nthat.\n\nIn any case, any payment processor is going to expect you to be selling \nsomething real.\n\nDo you have electronic transfer or paper cheque in your country? (even \nif only within Europe)"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 03 Feb 2010 20:25:53 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin API", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #143"}, "authorText": "Is there any way to find out what the missing shared libraries are?  It \nwould help to know.\n\nIt probably needs the gtk libraries, in which case you'll have the same \nproblem with the 64-bit version.  I would like to have a single \nexecutable that can also run on a UI-less system, but I'm not sure how \non linux to link to things but still be able to run and not use them if \nthe library is not present.  Maybe we should statically link the GTK. \nLicensewise, it's LGPL, but since it's only used on unix, that would be \nOK.  (we can't link LGPL stuff on windows because we provide the OpenSSL \nDLL, but on linux OpenSSL comes with the OS)\n\nMy 64-bit (debug stripped) executable is attached.  It includes untested \nchanges that are not in SVN yet: UI changes and the wallet fSpent flag \nresync stuff.\n\nI've been researching options for interprocess calling.  I want \nsomething that will be easy for a variety of server side languages to \ncall, particularly PHP.  Cross-platform to windows is a plus.\n\nI'm not sure if I want it to be something that can be accessed across \nthe network.  That would introduce security issues.  If it can only be \naccessed on the local system, then local security authentication covers \nit, and it is incapable of being hacked remotely.\n\nAt surface level, not looking into any details yet, the current front \nrunners are:\nD-Bus:\n    local system only\n    used by qt, gnome and skype\n    bindings: c, python, java, c++,\n          php listed as \"in progress\"\n          .net listed as unmaintained\n          not sure how ready it is on windows\nXML-RPC:\n    widely used, built in libraries on PHP\n    it's more for web clients to talk to server, transport is http, so \nits a security question\n\nIs it possible to open a socket that can only be accessed locally?"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 04 Feb 2010 18:50:35 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin API", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #145"}, "authorText": "I must have accidentally typed j instead of z.  It's bz2 format.  Rename \nto .tar.bz2 or just do tar -jxvf"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 04 Feb 2010 19:33:26 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "UTF-8 to ANSI hack in CAboutDialog", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #146"}, "authorText": "What was the reason for this change?\n\n#if !wxUSE_UNICODE\n...\n     if (str.Find('\u00c2') != wxNOT_FOUND)\n         str.Remove(str.Find('\u00c2'), 1);\nto:\n     if (str.Find('\u00ef\u00bf\u00bd') != wxNOT_FOUND)\n         str.Remove(str.Find('\u00ef\u00bf\u00bd'), 1);\n\nwxFormBuilder turns the (c) symbol into UTF-8 automatically.  On \nwxWidgets-2.8.9 ansi, it shows as a copyright symbol with an extra trash \ncharacter, which this hack fixes up for the non-unicode (ansi) case."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 04 Feb 2010 19:59:48 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin API", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #147"}, "authorText": "Good, then no need to consider d-bus.  Is there something like IPC \nsockets on Windows?  I guess we could look how wx does it, or maybe the \nXML-RPC library will already know what to do.  Windows has named pipes, \nmaybe that's the best analogue.\n\nI don't think I want to invent my own RPC protocol, I want to use an \nexisting standard.  PHP, Java, Python or anything will be able to talk \nto the server directly the same way the command line commands do.\n\nI'm going to start reading on XML-RPC.  It's coming up in searches as \nthe most widely used protocol and widely supported.  PHP includes it in \nits standard libraries."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 05 Feb 2010 04:08:54 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin API research status", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #148"}, "authorText": "I noticed this in the docs for wxSocketServer::Accept(bool wait = true):\n\"If wait is true and there are no pending connections to be accepted, it \nwill wait for the next incoming connection to arrive.  **Warning: This \nwill block the GUI.\"\n\nwxWidgets is pathologically single-threaded.  Not only single-threaded, \nbut must-be-the-GUI-thread-ed.  Even for something as non-UI as \nwxStandardPaths I got nailed.  All this is fine for UI code, since this \nis the same constraint placed by Windows anyway, but for UI-less server \ndaemon code, wx calls are uncertain.\n\nStatus of my research currently:\n\nFor PHP, Python, etc to access the server, we need to use regular \nsockets.  I think we can make it local-only by binding to localhost \nonly, so it can only be accessed through the loopback.  They say it's \nalso watertight to simply check the IP of connections received and \ndisconnect anything not 127.0.0.1.  May as well do both.\n\nXML-RPC is a bit fat.  There are 4 libraries for C++ but they're all big \nand hard to build, dependencies, license issues.  Some posters complain \nall the C++ and PHP XML-RPC libraries are buggy.\n\nJSON-RPC is a simpler more elegant standard.  It's simple enough I could \nuse a generic JSON parser.\n\nPHP, Python and Java all have good implementations of JSON-RPC.\n\nI'm currently leaning towards JSON-RPC."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 05 Feb 2010 18:29:12 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Exchange options", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #151"}, "authorText": "Maybe the current difficulty of buying LR is already the limit of how \neasy it can get in that direction.\n\nEvery conventional payment method has refutability as their way to cope \nwith their lack of passwords and crypto.  The system is wide open to \ncopying plaintext credit card numbers and account numbers, and they deal \nwith it by reversing the transaction after the fact.  The system works \nfor physical goods that have to be delivered somewhere, and services \nwhich can't be resold.  It's a problem when it interfaces with precious \nmetals and currency conversion.\n\nThe first step of being easy in one direction, bitcoin->LR or anything \nof established value, goes a long way.  Even those who don't use the \nconversion still benefit from knowing that they could.  Trading bitcoin \nbecomes an easier way to trade the ability to claim LR, similar to how \npaper money was once the right to claim gold.  Nobody has to ever \nactually claim the LR to get the benefit of having the option that they \ncould if they wanted to.\n\nA lot of times you just need a minuscule amount of online currency.  The \nhassle of buying the other online currencies is too much for buying a \nsmall amount.  The ease of getting a small amount of bitcoin may help \nbootstrap an ecosystem of sellers of micropayment sized online goods \nselling to that market.  If the sellers can get LR for bitcoins, they're \nhappy, and that may be subsidized at first by investors who want to buy \nbc in large lots.\n\nThe main thing holding online currencies back is the lack of an easy way \nto get a small amount of currency.  Bitcoin opens that up.  It'll be the \nonly online currency that's both easy to cash out and easy to get a \nsmall amount.  It'll just be the usual harder difficulty to buy a large \namount."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 05 Feb 2010 18:39:18 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: UTF-8 to ANSI hack in CAboutDialog", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #152"}, "authorText": "Right, I'll change it to this so it doesn't get broken again:\n     if (str.Find('\\xC2') != wxNOT_FOUND)\n         str.Remove(str.Find('\\xC2'), 1);"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 07 Feb 2010 06:12:04 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "JSON-RPC status", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #153"}, "authorText": "The JSON-RPC implementation is going well.  I'm using boost::asio for \nsockets.  JSON-RPC can be plain socket or HTTP, but it seems most other \nimplementations are HTTP, so I made my own simple HTTP headers.  For \nJSON parsing I'm using JSON Spirit, which makes full use of STL and has \nbeen really nice to use.  It's header-only so it's no added build work, \nand small enough to just add it to our source tree.  MIT license.  This \nshould all be working in a few more days.\n\nThe forum sure is taking off.  I didn't expect to have so much activity \nso fast."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 08 Feb 2010 15:28:52 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Translation", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #155"}, "authorText": "Does Drupal have any special multi-language support, or do you just \ncreate copies of pages by hand?\n\nBlueSky offered to do translation on the forum.  If you create a \nwww.bitcoin.org/zh/ copy of the site and give him an account with just \nthe ability to create new pages and edit text, he'll probably translate \nthe site into Chinese for you and maybe maintain it."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 11 Feb 2010 22:58:29 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Translation", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #158"}, "authorText": "I didn't make any changes to Drupal code.  The only thing other than \ninstalling themes was the .htaccess file (which really is needed, it \ndidn't work in the global config file).\n\nIt was only SMF where I made some PHP changes.\n\nYou might find it preferable not to translate it into your own language. \n  Often the standard answer about legalities is that it's only intended \nfor people in other countries.  Translating it into your home language \nweakens that argument."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sat, 13 Feb 2010 01:08:42 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: JSON-RPC status", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #160"}, "authorText": "I uploaded my JSON-RPC and command line implementation to SVN.  I'm \nwaiting to post on the forum when I've had more time to think about the \ncommands.  At least some method names are going to change.\n\nTo enable the RPC server, add the switch -server.  It's not on by default.\n\nClient commands are without any switches, as such:\nbitcoin getblockcount\nbitcoin getdifficulty\nbitcoin getnewaddress somelabel\nbitcoin sendtoaddress 1DvqsbZ... 1.00\nbitcoin getallpayments 0\nbitcoin stop\n\nApplications would normally use JSON-RPC directly, not command line.\n\nI haven't tested my JSON-RPC server with anything else yet.  If you do, \nplease tell me how it goes.  You're using Python, right?\n\nGetting the Linux version to run without the GTK installed will be a \nseparate task."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 14 Feb 2010 21:48:31 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: JSON-RPC status", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #163"}, "authorText": "[...]\n\nI will probably relent and do that.  I can move init and shutdown into \ninit.cpp or start.cpp or something, link only wxbase and not link ui.o \nand uibase.o.\n\nwxWidgets is mostly Windows people, they wouldn't know much about GTK.\n\nDon't you have an Ubuntu laptop you can test and compile on so you don't \nhave to toy with the vps?"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 15 Feb 2010 18:11:53 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: JSON-RPC status", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #165"}, "authorText": "[...]\n\nHurray, I got it on the first go.\n\nCould you send me the Python code you used?  So if I do some testing \nlater I don't have to figure it out myself."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 22 Feb 2010 20:17:42 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Non-GUI option", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #168"}, "authorText": "[...]\n\nI see it calls gtk-init-check in wxApp::Initialize.\n\nI can subclass Initialize, call the original one while suppressing the \nerror message and ignore the return value.  It seems to be working.\n\nAny suggestions what to name the command line switches and how to \ndescribe them?  Is there any traditional standard?  I'm currently using:\n-daemon (or -d)   (Enables RPC and runs in the background)\n-server           (Enables RPC)"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 23 Feb 2010 01:41:01 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Non-GUI option", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #169"}, "authorText": "[...]\n\nThis is working.  A few more things and I'll upload it.\n\nWe'll need to tell people to install the GTK libraries.  Do you remember \nthe apt-get command to install GTK, and can you install it without \nhaving a GUI installed?"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 24 Feb 2010 06:34:52 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Non-GUI option", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #172"}, "authorText": "[...]\n\nGood, that gives them a little sense of ownership and responsibility.\n\nI hope we get at least one .mo file for the software translation in time \nto put into the 0.3 release."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 28 Feb 2010 14:47:01 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoind", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #174"}, "authorText": "I put it at bitcoin.org/download/linux64-0.2.7.1.tar.gz.  You can delete \nit when you've got it.\n\nI thought about what might cause the problem you're having and made a \nchange that this build includes.  This might have been unsafe code, \nalthough it would probably always get lucky.\n\nin util.cpp, old:\nconst char* wxGetTranslation(const char* pszEnglish)\n{\n     // Wrapper of wxGetTranslation returning the same const char* type \nas was passed in\n     static CCriticalSection cs;\n     CRITICAL_BLOCK(cs)\n     {\n         // Look in cache\n         static map<string, char*> mapCache;\n         map<string, char*>::iterator mi = mapCache.find(pszEnglish);\n         if (mi != mapCache.end())\n             return (*mi).second;\n\n         // wxWidgets translation\n         const char* pszTranslated = \nwxGetTranslation(wxString(pszEnglish, wxConvUTF8)).utf8_str();\n\n         // We don't cache unknown strings because caller might be \npassing in a\n         // dynamic string and we would keep allocating memory for each \nvariation.\n         if (strcmp(pszEnglish, pszTranslated) == 0)\n             return pszEnglish;\n\n         // Add to cache, memory doesn't need to be freed.  We only \ncache because\n         // we must pass back a pointer to permanently allocated memory.\n         char* pszCached = new char[strlen(pszTranslated)+1];\n         strcpy(pszCached, pszTranslated);\n         mapCache[pszEnglish] = pszCached;\n         return pszCached;\n     }\n     return NULL;\n}\n\nnew:\nconst char* wxGetTranslation(const char* pszEnglish)\n{\n     // Wrapper of wxGetTranslation returning the same const char* type \nas was passed in\n     static CCriticalSection cs;\n     CRITICAL_BLOCK(cs)\n     {\n         // Look in cache\n         static map<string, char*> mapCache;\n         map<string, char*>::iterator mi = mapCache.find(pszEnglish);\n         if (mi != mapCache.end())\n             return (*mi).second;\n\n         // wxWidgets translation\n         wxString strTranslated = wxGetTranslation(wxString(pszEnglish, \nwxConvUTF8));\n\n         // We don't cache unknown strings because caller might be \npassing in a\n         // dynamic string and we would keep allocating memory for each \nvariation.\n         if (strcmp(pszEnglish, strTranslated.utf8_str()) == 0)\n             return pszEnglish;\n\n         // Add to cache, memory doesn't need to be freed.  We only \ncache because\n         // we must pass back a pointer to permanently allocated memory.\n         char* pszCached = new char[strlen(strTranslated.utf8_str())+1];\n         strcpy(pszCached, strTranslated.utf8_str());\n         mapCache[pszEnglish] = pszCached;\n         return pszCached;\n     }\n     return NULL;\n}\n\nIf you still suspect this code, for testing you could change it to:\nconst char* wxGetTranslation(const char* pszEnglish)\n{\n     return pszEnglish;\n}"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 28 Feb 2010 20:09:07 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoind", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #175"}, "authorText": "Could you send me the debug.log?"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 02 Mar 2010 22:27:22 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoind", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #178"}, "authorText": "Does it still do it if you didn't do getinfo?\n\nYou could comment out the CreateThreads listed below, then re-enable \nthem one at a time until it does it again.  Then we would know which \nthread the problem is in.\n\nnet.cpp, under // Start threads\n     CreateThread(ThreadIRCSeed, NULL)\n     CreateThread(ThreadSocketHandler, NULL, true)\n     CreateThread(ThreadOpenConnections, NULL)\n     CreateThread(ThreadMessageHandler, NULL)\n\ninit.cpp:\n     CreateThread(ThreadRPCServer, NULL);"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 03 Mar 2010 03:54:52 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoind", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #180"}, "authorText": "That narrows it down a lot.  It didn't print any IRC activity in \ndebug.log, so I guess it couldn't have gotten past the RecvUntil. \nEyeballing it I don't see anything obvious.  I guess it would have to be \neither in ConnectSocket or RecvUntil.\n\nTry it with the attached irc.cpp and net.cpp and send me the debug.log.\n\nOr you could run it in gdb and step through ThreadIRCSeed\ngdb --args bitcoin [switches]\nb ThreadIRCSeed\nrun\nstep\nor u to step over and up out of routines."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 03 Mar 2010 17:15:28 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoind", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #182"}, "authorText": "It's in RecvUntil, but I still can't see anything wrong with it.  The \nonly thing I can think of is if the socket is receiving a spew of \ncharacters.\n\nTry this irc.cpp.  debug.log may grow rapidly so be ready to kill it."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 05 Mar 2010 00:42:16 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoind", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #185"}, "authorText": "It's in util.c ParseString.  I'm guessing the problem is incompatibility \nbetween the type \"unsigned int\" and the type of str.npos, which is \nsize_type.\n\nTry changing the two \"unsigned int\"s to \"size_type\".\n\nold:\nvoid ParseString(const string& str, char c, vector<string>& v)\n{\n     unsigned int i1 = 0;\n     unsigned int i2;\n     do\n     {\n         i2 = str.find(c, i1);\n         v.push_back(str.substr(i1, i2-i1));\n         i1 = i2+1;\n     }\n     while (i2 != str.npos);\n}\n\nnew:\nvoid ParseString(const string& str, char c, vector<string>& v)\n{\n     size_type i1 = 0;\n     size_type i2;\n     do\n     {\n         i2 = str.find(c, i1);\n         v.push_back(str.substr(i1, i2-i1));\n         i1 = i2+1;\n     }\n     while (i2 != str.npos);\n}"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 05 Mar 2010 00:54:40 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoind", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #186"}, "authorText": "Actually, please try this instead, this is more correct:\n\nvoid ParseString(const string& str, char c, vector<string>& v)\n{\n     string::size_type i1 = 0;\n     string::size_type i2;\n     loop\n     {\n         i2 = str.find(c, i1);\n         if (i2 == str.npos)\n         {\n             v.push_back(str.substr(i1));\n             return;\n         }\n         v.push_back(str.substr(i1, i2-i1));\n         i1 = i2+1;\n     }\n}"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 05 Mar 2010 01:42:00 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoind", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #188"}, "authorText": "I confirmed that ParseString has this problem, and uploaded the fixed \nutil.cpp to SVN.\n\nstring::npos == -1\n\nComparing unsigned int -1 (0xffffffff) with long unsigned int -1 \n(0xffffffffffffffff) results in the unsigned int being promoted to \n64-bit, which is 0x00000000ffffffff != 0xffffffffffffffff."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sat, 06 Mar 2010 06:39:53 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Blog", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #189"}, "authorText": "There's a blog writer who wants to write a story about Bitcoin, but I \ndon't have time right now to answer his questions.  Would you be \ninterested in answering his questions if I refer him to you?  We might \nget a good link out of it.\n\nThe blog is\nhttp://themonetaryfuture.blogspot.com"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 16 May 2010 20:12:21 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Status update", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #192"}, "authorText": "I've also been busy with other things for the last month and a half.  I \njust now downloaded my e-mail since the beginning of April.  I mostly \nhave things sorted and should be back to Bitcoin shortly.  Glad that \nyou've been handling things in my absence.  Congrats on your first \ntransaction!\n\nAs I recall, the code was nearly ready for a 0.3 release.  I think all \nit needed was a little testing time and to install the new icon xpm.\n\nThe JSON API functions are complete.  I wanted to take another fresh \nlook at them in case I think of any better function names before \ncommitting.  I ought to write some sample code showing the proper way to \nuse them, particularly with polling for received transactions.  When I \nleft off, I was thinking about bolting a payment mechanism onto a free \nupload server software as an example.  It would make sense to actually \nbuild one practical application with the API before releasing it.  You \ndon't realise the problems with an API until you actually try to use it."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 22 Jun 2010 18:36:22 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "0.3.0 rc1 quickie download link", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #193"}, "authorText": "If bandwidth is a problem, delete my link in the \"0.3 almost ready\" \nthread.  I just don't want to upload it to sourceforge for a quickie \nshare for a day or two, possibly taking it down immediately if there's a \nbug.  Sourceforge has a policy of not allowing removal of files once \nthey're added, and it's a pain to upload to.  I'll delete the file once \nthe release is ready.\n\nBTW, it's looking like I may be able to get us some money soon to cover \nweb host costs, back your exchange service, etc, in the form of cash in \nthe mail.  Can you receive it and act as the project's treasurer?"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 23 Jun 2010 21:33:57 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: donation", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #195"}, "authorText": "[...]\n\nI got a donation offer for $2000 USD.  I need to get your postal mailing \naddress to have him send to.  And yes, he wants to remain anonymous, so \nplease keep the envelope's origin private."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 06 Jul 2010 03:59:57 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Anonymous, homepage changes", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #197"}, "authorText": "I think we should de-emphasize the anonymous angle.  With the popularity \nof bitcoin addresses instead of sending by IP, we can't give the \nimpression it's automatically anonymous.  It's possible to be \npseudonymous, but you have to be careful.  If someone digs through the \ntransaction history and starts exposing information people thought was \nanonymous, the backlash will be much worse if we haven't prepared \nexpectations by warning in advance that you have to take precautions if \nyou really want to make that work.  Like Tor says, \"Tor does not \nmagically encrypt all of your Internet activities.  Understand what Tor \ndoes and does not do for you.\"\n\nAlso, anonymous sounds a bit shady.  I think the people who want \nanonymous will still figure it out without us trumpeting it.\n\nI made some changes to the bitcoin.org homepage.  It's not really \ncrucial to update the translations.  I tend to keep editing and \ncorrecting for some time afterwards, so if they want to update, they \nshould wait.\n\nI removed the word \"anonymous\", and the sentence about \"anonymity \nmeans\", although you worded it so carefully \"...CAN be kept hidden...\" \nit was a shame to remove it.\n\nInstead, I added Tor instructions at the bottom, with instructions for \nhow to stay anonymous (pseudonymous) directly after the Tor \ninstructions: \"If you want to remain anonymous (pseudonymous, really), \nbe careful not to reveal any information linking your bitcoin addresses \nto your identity, and use a new bitcoin address for each payment you \nreceive.\"\n\nIt helps that it can now seed automatically through Tor.\n\nEven though it doesn't say anonymous until the bottom, I think anonymous \nseekers would already suspect it based on all the other attributes like \nno central authority to take your ID info and the way bitcoin addresses \nlook."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 06 Jul 2010 19:03:50 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "0.3.0 released", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #198"}, "authorText": "I uploaded 0.3.0 beta to sourceforge and updated the links on \nbitcoin.org.  I still need to post the announcement message on the forum \nand mailing list.  Here's what I've prepared:\n\nAnnouncing version 0.3 of Bitcoin, the P2P cryptocurrency!  Bitcoin is a \ndigital currency using cryptography and a distributed network to replace \nthe need for a trusted central server.  Escape the arbitrary inflation \nrisk of centrally managed currencies!  Bitcoin's total circulation is \nlimited to 21 million coins.  The coins are gradually being released to \nthe networks nodes based on the CPU power they contribute.  You can get \na share of them just by installing the software and contributing your \nidle CPU time.\n\nWhat's new:\n- Command line and JSON-RPC control\n- Includes a daemon version without GUI\n- Tabs for sent and received transactions\n- 20% faster hashing\n- Hashmeter performance display\n- Mac OS X version (thanks to Laszlo)\n- German, Dutch and Italian translations (thanks to DataWraith, Xunie \nand Joozero)"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 06 Jul 2010 19:40:11 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: 0.3.0 released", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #199"}, "authorText": "Actually, \"tabs for sent and received transactions\" sounds really \nimmature if it doesn't have that already.  \"Transaction filter tabs\" \nsounds better.\n\nI'm still editing it a little more and then I'll e-mail it to \nbitcoin-list and send it to the cryptography list."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 06 Jul 2010 22:53:07 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "[bitcoin-list] Bitcoin 0.3 released!", "to": "bitcoin-list@lists.sourceforge.net"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #200"}, "authorText": "Announcing version 0.3 of Bitcoin, the P2P cryptocurrency!  Bitcoin is a \ndigital currency using cryptography and a distributed network to replace \nthe need for a trusted central server.  Escape the arbitrary inflation \nrisk of centrally managed currencies!  Bitcoin's total circulation is \nlimited to 21 million coins.  The coins are gradually released to the \nnetwork's nodes based on the CPU power they contribute, so you can get a \nshare of them by contributing your idle CPU time.\n\nWhat's new:\n- Command line and JSON-RPC control\n- Includes a daemon version without GUI\n- Transaction filter tabs\n- 20% faster hashing\n- Hashmeter performance display\n- Mac OS X version (thanks to Laszlo)\n- German, Dutch and Italian translations (thanks to DataWraith, Xunie \nand Joozero)"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 14 Jul 2010 22:52:46 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Fwd: Re: bitcoin!!!!", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #202"}, "authorText": "I see the interior pages of the old sourceforge wiki are still up, \nthough the homepage forwards.\n\n[...]\n\nIt was an old FAQ on sourceforge that had been linked from slashdot (on a\nhighly visible comment). people were going there because bitcoin.org was \ndown\nfor a while.\n\nhttp://bitcoin.sourceforge.net/wiki/index.php?page=FAQ\n\nProbably not an issue anymore, but might be a good idea to delete or update\nthat wiki page."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 15 Jul 2010 18:41:10 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "bitcoin.org drupal users", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #203"}, "authorText": "Is it possible for the translators (at least the more trusted ones) to \nhave user accounts on drupal so they can update their translated text \ndirectly?  The user accounts on drupal appear to be pretty weak.  I \ncreated a satoshi account and it can't even edit the side bar stuff, \njust the main text of pages.  I don't think user accounts can access any \nof the admin stuff.  Do you think it's safe, or do you feel insecure \nabout doing that?  If you're worried, maybe there's a way to lock just \nthe english version of the homepage.\n\nIt would be nice if when I need to make changes to the homepage, I could \nenlist someone like Xunie to do the rote work of reflecting it to all \nthe translations instead of having to do all that work myself.  (many \nlight changes don't require understanding the language to fix the \ntranslated pages)"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 15 Jul 2010 18:43:55 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Fwd: Please update the bitcoin FAQ so new member can have the right info", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #204"}, "authorText": "[...]\n\nIt\u2019s recommended that you stop Bitcoin before backing it up to make sure\nthe backup will be correct.\""}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 15 Jul 2010 21:00:12 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "bitcoin.org server", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #205"}, "authorText": "You did some research when choosing hosting, this was a well chosen one, \nright?  It seems like it would be a tremendous hassle to change, and \nwe've had good luck with this one.  Cheaper will usually have some \noffsetting drawback in quality.\n\nI wonder if that extra memory is just disk cache or something.\n\nI take it you haven't received anything from that donor yet?  He seemed \npretty certain he was going to send it, maybe more.  (if you get \nanything, we need to keep private for him the fact that we got a donation)"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 18 Jul 2010 16:23:21 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "wiki", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #209"}, "authorText": "http://www.bitcoin.org/smf/index.php?topic=393.msg3785#msg3785\n\n[...]"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 18 Jul 2010 16:23:10 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Fwd: bitcoin hosting", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #210"}, "authorText": "Please promise me you won't make a switch now.  The last thing we need \nis switchover hassle on top of the slashdot flood of work we've got now. \n  I'm losing my mind there are so many things that need to be done.\n\nAlso, it would suck to be on a smaller, less reliable host just to save \na measly $20.\n\nI will try to think of a polite way to ask the donor if he sent it, but \nright now there are other higher priority things that are going to bump \neven that for a few days.\n\nWould a donation of bitcoins help in the short term?"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 21 Jul 2010 23:28:33 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Donation", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #213"}, "authorText": "[...]\n\nThat's great!  I'll let him know it was received and thank him.\n\nIt might be a long time before we get another donation like that, we \nshould save a lot of it.\n\nSpend what you need on hosting.  Email me a simple accounting when you \ntake out money for expenses, like:\n    -$60 rackspace monthly\n   $2540 balance\n\n[...]\n\n$100-200 is chump change if they're a serious company, it would only \nmake us sound small.\n\nWhat they need most is confidence they can convert it to fiat currency. \n  That VOIP company essentially said so in a recent post.  The best \nthing we can do is make sure there's cash available to cash out and \nsupport and steady the conversion rate.\n\nThe money is leveraged better that way too.  Theoretically, imagine 10 \nbusinesses have their eye on a $100 bill being offered for bitcoins, but \ndon't actually cash out because they know it's there if they need it. \nThat one $100 bill allowed 10 different people to act like their 5000 \nbitcoins were equivalent to $100.\n\nI think we should allocate $1000 at this point to your exchange."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 23 Jul 2010 16:59:42 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Donation", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #215"}, "authorText": "[...]\n\nInteresting, so how is the balance between purchases of coins and cash \ngoing?\n\nBtw, are you able to use my builds of bitcoind on your host, or do you \nhave to build it yourself?"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sat, 24 Jul 2010 15:38:53 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Donation", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #217"}, "authorText": "[...]\n\nThey probably couldn't have gotten that large of a trade on \nbitcoinmarket.com."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 26 Jul 2010 19:22:08 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: /usr/lib/libstdc++.so.6: version `GLIBCXX_3.4.11'", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #218"}, "authorText": "[...]\n\nWish I could figure out how to fix that.  What version of GLIBCXX does \nyour system have?\n\nMake sure you upgrade to Bitcoin 0.3.3 as soon as possible."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 29 Jul 2010 03:18:56 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Forum e-mail notifications and PBL blacklist and wiki registration", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #219"}, "authorText": "http://www.bitcoin.org/smf/index.php?topic=338.0\n\n[...]\n\nI think our problem may be that we have forum notifications on, like \ne-mail you when you receive a PM, but we don't have e-mail verification \nof new accounts.  Can someone put someone else's e-mail address without \nverifying it, then have stuff sent there?  We need to stop that right \naway before it gets used for something bad.  Either disallow all \nnotification, or make sure e-mail addresses are verified.\n\nI'm more inclined to disallow notifications or anything where the forum \nsends you e-mail.  I kinda like not requiring e-mail verification.  But \nif that's the only way to make sure we don't send e-mails to un-verified \naddresses, then we could do that.\n\nIf we request to get off of PBL, we'd better make sure we've got the \nproblem secured first.\n\nI changed Registration->settings->registration of new members to \"Member \nActivation\".  I assume that means it e-mail verifies.\n\"Member Activation\nWhen this option is enabled any members registering to the forum will \nhave a activation link emailed to them which they must click before they \ncan become full members\"\n\nI think that's the only way to make sure the forum can't be used to send \nto other people's e-mail addresses and potentially use it to spam."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 30 Jul 2010 06:34:38 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "[bitcoin-list] Alert: upgrade to bitcoin 0.3.6", "to": "bitcoin-list@lists.sourceforge.net"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #220"}, "authorText": "Please upgrade to 0.3.6 ASAP to get an important bugfix.\n\nSee the bitcoin.org homepage for download links."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 02 Aug 2010 21:56:06 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "[Fwd: no activation mail]", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #221"}, "authorText": "Oh great, now we're screwed.\n\nWe probably got spam blocked because we were allowing registrations \nwithout e-mail verification.  But now that we've enabled it, our \nverification e-mails are blocked.\n\nThere could still be some existing user accounts created before the \nregistration requirement being used by spammers.\n\nWe're kind of in a jam here.  Can you make sure there's nothing else you \ncan think of that might be acting as an open e-mail gateway or way for \nspammers to use our system for putting out spam?  Check the e-mail logs \nand see if there's been a lot of traffic and what it's from.  If you can \nfigure out what the problem was and shut it down, then after you're sure \nit's fixed, request PBL to take us off the block list.\n\nIf there's a way to prohibit the forum from sending e-mail \nnotifications, maybe we should do that."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 02 Aug 2010 22:08:22 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Disabled some notifications", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #222"}, "authorText": "For \"normal members\" I disabled \"Request notification on replies\" and \n\"Request notification on new topics\".\n\nI'm pretty sure there's a notification option for when you receive PMs, \nbut I don't see a way to disable it.  If we have to, I guess we could \nedit the php code."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 02 Aug 2010 22:09:20 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "[Fwd: Forum e-mail notifications and PBL blacklist and wiki registration]", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #223"}, "authorText": "Here's the info about PBL again.\n\n[...]"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 11 Aug 2010 02:54:27 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: [Fwd: Forum e-mail notifications and PBL blacklist and wiki\tregistration]", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #228"}, "authorText": "Are PM notifications still disabled?  (All we really need is disable the \nforum's access to the mail server)\n\n[...]"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 11 Aug 2010 21:00:13 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: [Fwd: Forum e-mail notifications and PBL blacklist and wiki\tregistration]", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #230"}, "authorText": "Right, forgot about that.\n\nHopefully theymos was right that the PBL is the source of the problem."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 15 Aug 2010 21:37:28 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "[bitcoin-list] ALERT - we are investigating a problem", "to": "bitcoin-list@lists.sourceforge.net"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #231"}, "authorText": "*** WARNING ***  We are investigating a problem.  DO NOT TRUST ANY \nTRANSACTIONS THAT HAPPENED AFTER 15.08.2010 17:05 UTC (block 74638) \nuntil the issue is resolved."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 27 Aug 2010 03:36:43 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "[Fwd: SweepMines now accept bitcoins]", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #232"}, "authorText": "[...]"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Sun, 03 Oct 2010 21:27:29 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "SMF php code", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #235"}, "authorText": "I noticed my custom captcha stuff is gone.  I guess it got lost in an \nupgrade?  What are we doing for captcha now?  If we only have default \ncaptcha, we'd be getting flooded with spam accounts.  Do I need to \nre-integrate the custom captcha stuff or do we have another solution now?"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 04 Oct 2010 20:05:26 +0100", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: SMF php code", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #237"}, "authorText": "I reuploaded the changes.  For future reference, the files in Sources \nwith customisations are:\nRegister.php\nPersonalMessage.php\nManageRegistration.php\nSubs.php\n\nLet me know whenever you do an upgrade so I can make sure all my changes \nsurvived.\n\nHopefully the 1.1.x line is mature and updates are infrequent.  We \nshouldn't upgrade to 2.0.  I made a ton of customisations that wouldn't \nbe compatible, and I kind of prefer the look of 1.1 over 2.0 anyway.\n\nThe captcha url has mycode=4 added to it, and the register page has \nextra hidden mycode=2 through 5 images so any automated thing wouldn't \nknow which one to pick.  Everything that uses captcha has to have that \nmycode=4 thing added.  Something in sending personal messages also uses \ncaptcha.\n\n[...]"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 01 Dec 2010 00:58:37 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "[Fwd: Bitcoin.org is down]", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #238"}, "authorText": "-------- Original Message --------\nSubject: Bitcoin.org is down\nDate: Tue, 30 Nov 2010 18:27:02 -0600\nFrom: theymos <theymos@mm.st>\nTo: satoshin@gmx.com\n\nBitcoin.org has been down for several hours."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 02 Dec 2010 22:00:56 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "What was the bitcoin.org outage?", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #239"}, "authorText": "Do you know what caused that outage?  Did it need to be rebooted, or was \nit a DoS or something?  The IP was pingable during the outage.\n\nDid you get back to davidonpda about his doing a mirror backup?  I think \nthat's a really good idea.  Do you do any backups, or the VPS do any for \nyou automatically?"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Fri, 03 Dec 2010 19:58:40 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: What was the bitcoin.org outage?", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #241"}, "authorText": "[...]\n\nIt should be Gavin.  I trust him, he's responsible, professional, and \ntechnically much more linux capable than me.\n\n(I don't know Xunie, but he hasn't posted for months and he was a goofball)"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 06 Dec 2010 16:08:56 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: What was the bitcoin.org outage?", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #243"}, "authorText": "[...]\n\nThanks, did you finish moving bitcoinexchange to another server?\n\n[...]\n\nIt's also at\nhttp://www.bitcoin.org/Satoshi_Nakamoto.asc"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 07 Dec 2010 15:38:28 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Project Developers", "to": "Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #245"}, "authorText": "Mind if I add you to the Project Developers list on the Contact page? \nYou wrote some code before so you should be there.  It would have to be \nyour real name for consistency.  If you want to have an e-mail address \nlisted, I'll make an image out of it so it doesn't attract spam."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Wed, 08 Dec 2010 23:09:45 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "[bitcoin-list] Bitcoin 0.3.18 is released", "to": "bitcoin-list@lists.sourceforge.net"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #247"}, "authorText": "Version 0.3.18 is now available.\n\nChanges:\n- Fixed a wallet.dat compatibility problem if you downgraded from 0.3.17 \nand then upgraded again\n- IsStandard() check to only include known transaction types in blocks\n- Jgarzik's optimisation to speed up the initial block download a little\n\nThe main addition in this release is the Accounts-based JSON-RPC \ncommands that Gavin's been working on (more details at \nhttp://www.bitcoin.org/smf/index.php?topic=1886.0).\n- getaccountaddress\n- sendfrom\n- move\n- getbalance\n- listtransactions\n\nDownload:\nhttp://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.18/"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 13 Dec 2010 16:11:53 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "[bitcoin-list] Bitcoin 0.3.19 is released", "to": "bitcoin-list@lists.sourceforge.net"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #249"}, "authorText": "This is a minor release to add some DoS protection.\n\nChanges:\n- Added some DoS limits, though it's still far from DoS resistant.\n- Removed \"safe mode\" alerts.\n\nhttp://www.bitcoin.org/smf/index.php?topic=2228.0\n\nDownload:\nhttp://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.19/"}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Mon, 20 Dec 2010 18:10:06 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Bitcoin.org backups", "to": "Gavin Andresen <gavinandresen@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #251"}, "authorText": "[...]\n\nI agree, don't let the database out of your hands.  There's private PM \nin there, e-mail addresses, passwords.\n\nBTW, password hashes = passwords.  It's easy to break the hash of short \npasswords people use on forums.\n6 chars = 3 difficulty\n7 chars = 410 difficulty\n8 chars = 25418 difficulty\n\n\n[...]\n\n+1\n\nEven with encryption, a trusted storage place is better."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Thu, 06 Jan 2011 18:31:26 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Writing about BitCoin", "to": "Gavin Andresen <gavinandresen@gmail.com>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #254"}, "authorText": "[...]\n\nGreat\n\n[...]\n\nTrue\n\n[...]\n\nYou're the best person to do it.\n\nEFF is really important.  We want to have a good relationship with them. \n  We're the type of project they like; they've helped the TOR project \nand done a lot to protect P2P file sharing."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 25 Jan 2011 18:34:03 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: Fwd: Bitcoin question", "to": "mmalmi@cc.hut.fi"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #256"}, "authorText": "The paper was published in 2008.\n\nSomeone needs to correct Wikipedia; it incorrectly says the paper was \npublished in 2009.  The paper was released earlier than the software."}, {"author": "Satoshi Nakamoto", "metadata": {"emailHeader": {"date": "Tue, 22 Feb 2011 19:49:19 +0000", "from": "Satoshi Nakamoto <satoshin@gmx.com>", "subject": "Re: 0.3.20 release : shipped", "to": "Gavin Andresen <gavinandresen@gmail.com>, Martti Malmi <mmalmi@cc.hut.fi>"}, "source": "https://mmalmi.github.io/satoshi/", "emailIndex": "Email #260"}, "authorText": "[...]\n\nMartti should give you the Drupal admin password.\n\nAny subscriber can post to bitcoin-list.  Here's the admin password in \ncase you need it later.\n\n[...]"}]